<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20211.21.0320.1853                               -->
<workbook original-version='18.1' source-build='2021.1.0 (20211.21.0320.1853)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <_.fcp.SetMembershipControl.true...SetMembershipControl />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='owid-covid-data' inline='true' name='federated.1ezkvbd1x7q9fn17he4if15ah0ng' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='owid-covid-data' name='textscan.1r9m8141xzbcem179joac1wwx3x2'>
            <connection class='textscan' directory='C:/Users/admin/OneDrive/Desktop/SPARKS/TASK 8 - COVID #Tableau' filename='owid-covid-data.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1r9m8141xzbcem179joac1wwx3x2' name='owid-covid-data.csv' table='[owid-covid-data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='string' name='iso_code' ordinal='0' />
            <column datatype='string' name='continent' ordinal='1' />
            <column datatype='string' name='location' ordinal='2' />
            <column datatype='date' name='date' ordinal='3' />
            <column datatype='real' name='total_cases' ordinal='4' />
            <column datatype='real' name='new_cases' ordinal='5' />
            <column datatype='real' name='new_cases_smoothed' ordinal='6' />
            <column datatype='real' name='total_deaths' ordinal='7' />
            <column datatype='real' name='new_deaths' ordinal='8' />
            <column datatype='real' name='new_deaths_smoothed' ordinal='9' />
            <column datatype='real' name='total_cases_per_million' ordinal='10' />
            <column datatype='real' name='new_cases_per_million' ordinal='11' />
            <column datatype='real' name='new_cases_smoothed_per_million' ordinal='12' />
            <column datatype='real' name='total_deaths_per_million' ordinal='13' />
            <column datatype='real' name='new_deaths_per_million' ordinal='14' />
            <column datatype='real' name='new_deaths_smoothed_per_million' ordinal='15' />
            <column datatype='real' name='reproduction_rate' ordinal='16' />
            <column datatype='string' name='icu_patients' ordinal='17' />
            <column datatype='string' name='icu_patients_per_million' ordinal='18' />
            <column datatype='string' name='hosp_patients' ordinal='19' />
            <column datatype='string' name='hosp_patients_per_million' ordinal='20' />
            <column datatype='string' name='weekly_icu_admissions' ordinal='21' />
            <column datatype='string' name='weekly_icu_admissions_per_million' ordinal='22' />
            <column datatype='string' name='weekly_hosp_admissions' ordinal='23' />
            <column datatype='string' name='weekly_hosp_admissions_per_million' ordinal='24' />
            <column datatype='real' name='new_tests' ordinal='25' />
            <column datatype='real' name='total_tests' ordinal='26' />
            <column datatype='real' name='total_tests_per_thousand' ordinal='27' />
            <column datatype='real' name='new_tests_per_thousand' ordinal='28' />
            <column datatype='real' name='new_tests_smoothed' ordinal='29' />
            <column datatype='real' name='new_tests_smoothed_per_thousand' ordinal='30' />
            <column datatype='real' name='positive_rate' ordinal='31' />
            <column datatype='real' name='tests_per_case' ordinal='32' />
            <column datatype='string' name='tests_units' ordinal='33' />
            <column datatype='real' name='total_vaccinations' ordinal='34' />
            <column datatype='real' name='people_vaccinated' ordinal='35' />
            <column datatype='real' name='people_fully_vaccinated' ordinal='36' />
            <column datatype='real' name='new_vaccinations' ordinal='37' />
            <column datatype='real' name='new_vaccinations_smoothed' ordinal='38' />
            <column datatype='real' name='total_vaccinations_per_hundred' ordinal='39' />
            <column datatype='real' name='people_vaccinated_per_hundred' ordinal='40' />
            <column datatype='real' name='people_fully_vaccinated_per_hundred' ordinal='41' />
            <column datatype='real' name='new_vaccinations_smoothed_per_million' ordinal='42' />
            <column datatype='real' name='stringency_index' ordinal='43' />
            <column datatype='real' name='population' ordinal='44' />
            <column datatype='real' name='population_density' ordinal='45' />
            <column datatype='real' name='median_age' ordinal='46' />
            <column datatype='real' name='aged_65_older' ordinal='47' />
            <column datatype='real' name='aged_70_older' ordinal='48' />
            <column datatype='real' name='gdp_per_capita' ordinal='49' />
            <column datatype='real' name='extreme_poverty' ordinal='50' />
            <column datatype='real' name='cardiovasc_death_rate' ordinal='51' />
            <column datatype='real' name='diabetes_prevalence' ordinal='52' />
            <column datatype='real' name='female_smokers' ordinal='53' />
            <column datatype='real' name='male_smokers' ordinal='54' />
            <column datatype='real' name='handwashing_facilities' ordinal='55' />
            <column datatype='real' name='hospital_beds_per_thousand' ordinal='56' />
            <column datatype='real' name='life_expectancy' ordinal='57' />
            <column datatype='real' name='human_development_index' ordinal='58' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.1r9m8141xzbcem179joac1wwx3x2' name='owid-covid-data.csv' table='[owid-covid-data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='string' name='iso_code' ordinal='0' />
            <column datatype='string' name='continent' ordinal='1' />
            <column datatype='string' name='location' ordinal='2' />
            <column datatype='date' name='date' ordinal='3' />
            <column datatype='real' name='total_cases' ordinal='4' />
            <column datatype='real' name='new_cases' ordinal='5' />
            <column datatype='real' name='new_cases_smoothed' ordinal='6' />
            <column datatype='real' name='total_deaths' ordinal='7' />
            <column datatype='real' name='new_deaths' ordinal='8' />
            <column datatype='real' name='new_deaths_smoothed' ordinal='9' />
            <column datatype='real' name='total_cases_per_million' ordinal='10' />
            <column datatype='real' name='new_cases_per_million' ordinal='11' />
            <column datatype='real' name='new_cases_smoothed_per_million' ordinal='12' />
            <column datatype='real' name='total_deaths_per_million' ordinal='13' />
            <column datatype='real' name='new_deaths_per_million' ordinal='14' />
            <column datatype='real' name='new_deaths_smoothed_per_million' ordinal='15' />
            <column datatype='real' name='reproduction_rate' ordinal='16' />
            <column datatype='string' name='icu_patients' ordinal='17' />
            <column datatype='string' name='icu_patients_per_million' ordinal='18' />
            <column datatype='string' name='hosp_patients' ordinal='19' />
            <column datatype='string' name='hosp_patients_per_million' ordinal='20' />
            <column datatype='string' name='weekly_icu_admissions' ordinal='21' />
            <column datatype='string' name='weekly_icu_admissions_per_million' ordinal='22' />
            <column datatype='string' name='weekly_hosp_admissions' ordinal='23' />
            <column datatype='string' name='weekly_hosp_admissions_per_million' ordinal='24' />
            <column datatype='real' name='new_tests' ordinal='25' />
            <column datatype='real' name='total_tests' ordinal='26' />
            <column datatype='real' name='total_tests_per_thousand' ordinal='27' />
            <column datatype='real' name='new_tests_per_thousand' ordinal='28' />
            <column datatype='real' name='new_tests_smoothed' ordinal='29' />
            <column datatype='real' name='new_tests_smoothed_per_thousand' ordinal='30' />
            <column datatype='real' name='positive_rate' ordinal='31' />
            <column datatype='real' name='tests_per_case' ordinal='32' />
            <column datatype='string' name='tests_units' ordinal='33' />
            <column datatype='real' name='total_vaccinations' ordinal='34' />
            <column datatype='real' name='people_vaccinated' ordinal='35' />
            <column datatype='real' name='people_fully_vaccinated' ordinal='36' />
            <column datatype='real' name='new_vaccinations' ordinal='37' />
            <column datatype='real' name='new_vaccinations_smoothed' ordinal='38' />
            <column datatype='real' name='total_vaccinations_per_hundred' ordinal='39' />
            <column datatype='real' name='people_vaccinated_per_hundred' ordinal='40' />
            <column datatype='real' name='people_fully_vaccinated_per_hundred' ordinal='41' />
            <column datatype='real' name='new_vaccinations_smoothed_per_million' ordinal='42' />
            <column datatype='real' name='stringency_index' ordinal='43' />
            <column datatype='real' name='population' ordinal='44' />
            <column datatype='real' name='population_density' ordinal='45' />
            <column datatype='real' name='median_age' ordinal='46' />
            <column datatype='real' name='aged_65_older' ordinal='47' />
            <column datatype='real' name='aged_70_older' ordinal='48' />
            <column datatype='real' name='gdp_per_capita' ordinal='49' />
            <column datatype='real' name='extreme_poverty' ordinal='50' />
            <column datatype='real' name='cardiovasc_death_rate' ordinal='51' />
            <column datatype='real' name='diabetes_prevalence' ordinal='52' />
            <column datatype='real' name='female_smokers' ordinal='53' />
            <column datatype='real' name='male_smokers' ordinal='54' />
            <column datatype='real' name='handwashing_facilities' ordinal='55' />
            <column datatype='real' name='hospital_beds_per_thousand' ordinal='56' />
            <column datatype='real' name='life_expectancy' ordinal='57' />
            <column datatype='real' name='human_development_index' ordinal='58' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;Rs&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>iso_code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[iso_code]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>iso_code</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_0AA94EB83FD94838A20F267554633CE4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>continent</remote-name>
            <remote-type>129</remote-type>
            <local-name>[continent]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>continent</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_0AA94EB83FD94838A20F267554633CE4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>129</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_0AA94EB83FD94838A20F267554633CE4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_0AA94EB83FD94838A20F267554633CE4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_cases]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>total_cases</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_0AA94EB83FD94838A20F267554633CE4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_cases]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>new_cases</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_0AA94EB83FD94838A20F267554633CE4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases_smoothed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_cases_smoothed]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>new_cases_smoothed</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_0AA94EB83FD94838A20F267554633CE4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_deaths]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>total_deaths</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_0AA94EB83FD94838A20F267554633CE4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_deaths]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>new_deaths</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_0AA94EB83FD94838A20F267554633CE4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths_smoothed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_deaths_smoothed]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>new_deaths_smoothed</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_0AA94EB83FD94838A20F267554633CE4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_cases_per_million]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>total_cases_per_million</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_0AA94EB83FD94838A20F267554633CE4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_cases_per_million]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>new_cases_per_million</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_0AA94EB83FD94838A20F267554633CE4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases_smoothed_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_cases_smoothed_per_million]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>new_cases_smoothed_per_million</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_0AA94EB83FD94838A20F267554633CE4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_deaths_per_million]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>total_deaths_per_million</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_0AA94EB83FD94838A20F267554633CE4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_deaths_per_million]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>new_deaths_per_million</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_0AA94EB83FD94838A20F267554633CE4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths_smoothed_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_deaths_smoothed_per_million]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>new_deaths_smoothed_per_million</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_0AA94EB83FD94838A20F267554633CE4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>reproduction_rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[reproduction_rate]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>reproduction_rate</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_0AA94EB83FD94838A20F267554633CE4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>icu_patients</remote-name>
            <remote-type>129</remote-type>
            <local-name>[icu_patients]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>icu_patients</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_0AA94EB83FD94838A20F267554633CE4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>icu_patients_per_million</remote-name>
            <remote-type>129</remote-type>
            <local-name>[icu_patients_per_million]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>icu_patients_per_million</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_0AA94EB83FD94838A20F267554633CE4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hosp_patients</remote-name>
            <remote-type>129</remote-type>
            <local-name>[hosp_patients]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>hosp_patients</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_0AA94EB83FD94838A20F267554633CE4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hosp_patients_per_million</remote-name>
            <remote-type>129</remote-type>
            <local-name>[hosp_patients_per_million]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>hosp_patients_per_million</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_0AA94EB83FD94838A20F267554633CE4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weekly_icu_admissions</remote-name>
            <remote-type>129</remote-type>
            <local-name>[weekly_icu_admissions]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>weekly_icu_admissions</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_0AA94EB83FD94838A20F267554633CE4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weekly_icu_admissions_per_million</remote-name>
            <remote-type>129</remote-type>
            <local-name>[weekly_icu_admissions_per_million]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>weekly_icu_admissions_per_million</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_0AA94EB83FD94838A20F267554633CE4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weekly_hosp_admissions</remote-name>
            <remote-type>129</remote-type>
            <local-name>[weekly_hosp_admissions]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>weekly_hosp_admissions</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_0AA94EB83FD94838A20F267554633CE4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weekly_hosp_admissions_per_million</remote-name>
            <remote-type>129</remote-type>
            <local-name>[weekly_hosp_admissions_per_million]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>weekly_hosp_admissions_per_million</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_0AA94EB83FD94838A20F267554633CE4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_tests</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_tests]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>new_tests</remote-alias>
            <ordinal>25</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_0AA94EB83FD94838A20F267554633CE4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_tests</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_tests]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>total_tests</remote-alias>
            <ordinal>26</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_0AA94EB83FD94838A20F267554633CE4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_tests_per_thousand</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_tests_per_thousand]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>total_tests_per_thousand</remote-alias>
            <ordinal>27</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_0AA94EB83FD94838A20F267554633CE4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_tests_per_thousand</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_tests_per_thousand]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>new_tests_per_thousand</remote-alias>
            <ordinal>28</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_0AA94EB83FD94838A20F267554633CE4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_tests_smoothed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_tests_smoothed]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>new_tests_smoothed</remote-alias>
            <ordinal>29</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_0AA94EB83FD94838A20F267554633CE4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_tests_smoothed_per_thousand</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_tests_smoothed_per_thousand]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>new_tests_smoothed_per_thousand</remote-alias>
            <ordinal>30</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_0AA94EB83FD94838A20F267554633CE4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>positive_rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[positive_rate]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>positive_rate</remote-alias>
            <ordinal>31</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_0AA94EB83FD94838A20F267554633CE4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tests_per_case</remote-name>
            <remote-type>5</remote-type>
            <local-name>[tests_per_case]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>tests_per_case</remote-alias>
            <ordinal>32</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_0AA94EB83FD94838A20F267554633CE4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tests_units</remote-name>
            <remote-type>129</remote-type>
            <local-name>[tests_units]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>tests_units</remote-alias>
            <ordinal>33</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_0AA94EB83FD94838A20F267554633CE4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_vaccinations</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_vaccinations]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>total_vaccinations</remote-alias>
            <ordinal>34</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_0AA94EB83FD94838A20F267554633CE4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>people_vaccinated</remote-name>
            <remote-type>5</remote-type>
            <local-name>[people_vaccinated]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>people_vaccinated</remote-alias>
            <ordinal>35</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_0AA94EB83FD94838A20F267554633CE4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>people_fully_vaccinated</remote-name>
            <remote-type>5</remote-type>
            <local-name>[people_fully_vaccinated]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>people_fully_vaccinated</remote-alias>
            <ordinal>36</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_0AA94EB83FD94838A20F267554633CE4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_vaccinations</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_vaccinations]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>new_vaccinations</remote-alias>
            <ordinal>37</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_0AA94EB83FD94838A20F267554633CE4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_vaccinations_smoothed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_vaccinations_smoothed]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>new_vaccinations_smoothed</remote-alias>
            <ordinal>38</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_0AA94EB83FD94838A20F267554633CE4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_vaccinations_per_hundred</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_vaccinations_per_hundred]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>total_vaccinations_per_hundred</remote-alias>
            <ordinal>39</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_0AA94EB83FD94838A20F267554633CE4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>people_vaccinated_per_hundred</remote-name>
            <remote-type>5</remote-type>
            <local-name>[people_vaccinated_per_hundred]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>people_vaccinated_per_hundred</remote-alias>
            <ordinal>40</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_0AA94EB83FD94838A20F267554633CE4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>people_fully_vaccinated_per_hundred</remote-name>
            <remote-type>5</remote-type>
            <local-name>[people_fully_vaccinated_per_hundred]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>people_fully_vaccinated_per_hundred</remote-alias>
            <ordinal>41</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_0AA94EB83FD94838A20F267554633CE4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_vaccinations_smoothed_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_vaccinations_smoothed_per_million]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>new_vaccinations_smoothed_per_million</remote-alias>
            <ordinal>42</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_0AA94EB83FD94838A20F267554633CE4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>stringency_index</remote-name>
            <remote-type>5</remote-type>
            <local-name>[stringency_index]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>stringency_index</remote-alias>
            <ordinal>43</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_0AA94EB83FD94838A20F267554633CE4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>5</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>44</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_0AA94EB83FD94838A20F267554633CE4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population_density</remote-name>
            <remote-type>5</remote-type>
            <local-name>[population_density]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>population_density</remote-alias>
            <ordinal>45</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_0AA94EB83FD94838A20F267554633CE4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>median_age</remote-name>
            <remote-type>5</remote-type>
            <local-name>[median_age]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>median_age</remote-alias>
            <ordinal>46</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_0AA94EB83FD94838A20F267554633CE4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>aged_65_older</remote-name>
            <remote-type>5</remote-type>
            <local-name>[aged_65_older]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>aged_65_older</remote-alias>
            <ordinal>47</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_0AA94EB83FD94838A20F267554633CE4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>aged_70_older</remote-name>
            <remote-type>5</remote-type>
            <local-name>[aged_70_older]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>aged_70_older</remote-alias>
            <ordinal>48</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_0AA94EB83FD94838A20F267554633CE4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gdp_per_capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[gdp_per_capita]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>gdp_per_capita</remote-alias>
            <ordinal>49</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_0AA94EB83FD94838A20F267554633CE4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>extreme_poverty</remote-name>
            <remote-type>5</remote-type>
            <local-name>[extreme_poverty]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>extreme_poverty</remote-alias>
            <ordinal>50</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_0AA94EB83FD94838A20F267554633CE4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cardiovasc_death_rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cardiovasc_death_rate]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>cardiovasc_death_rate</remote-alias>
            <ordinal>51</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_0AA94EB83FD94838A20F267554633CE4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>diabetes_prevalence</remote-name>
            <remote-type>5</remote-type>
            <local-name>[diabetes_prevalence]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>diabetes_prevalence</remote-alias>
            <ordinal>52</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_0AA94EB83FD94838A20F267554633CE4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>female_smokers</remote-name>
            <remote-type>5</remote-type>
            <local-name>[female_smokers]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>female_smokers</remote-alias>
            <ordinal>53</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_0AA94EB83FD94838A20F267554633CE4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>male_smokers</remote-name>
            <remote-type>5</remote-type>
            <local-name>[male_smokers]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>male_smokers</remote-alias>
            <ordinal>54</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_0AA94EB83FD94838A20F267554633CE4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>handwashing_facilities</remote-name>
            <remote-type>5</remote-type>
            <local-name>[handwashing_facilities]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>handwashing_facilities</remote-alias>
            <ordinal>55</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_0AA94EB83FD94838A20F267554633CE4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hospital_beds_per_thousand</remote-name>
            <remote-type>5</remote-type>
            <local-name>[hospital_beds_per_thousand]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>hospital_beds_per_thousand</remote-alias>
            <ordinal>56</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_0AA94EB83FD94838A20F267554633CE4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>life_expectancy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[life_expectancy]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>life_expectancy</remote-alias>
            <ordinal>57</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_0AA94EB83FD94838A20F267554633CE4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>human_development_index</remote-name>
            <remote-type>5</remote-type>
            <local-name>[human_development_index]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>human_development_index</remote-alias>
            <ordinal>58</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_0AA94EB83FD94838A20F267554633CE4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='owid-covid-data.csv' datatype='table' name='[__tableau_internal_object_id__].[owid-covid-data.csv_0AA94EB83FD94838A20F267554633CE4]' role='measure' type='quantitative' />
      <column caption='Aged 65 Older' datatype='real' name='[aged_65_older]' role='measure' type='quantitative' />
      <column caption='Aged 70 Older' datatype='real' name='[aged_70_older]' role='measure' type='quantitative' />
      <column caption='Cardiovasc Death Rate' datatype='real' name='[cardiovasc_death_rate]' role='measure' type='quantitative' />
      <column caption='Continent' datatype='string' name='[continent]' role='dimension' type='nominal' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Diabetes Prevalence' datatype='real' name='[diabetes_prevalence]' role='measure' type='quantitative' />
      <column caption='Extreme Poverty' datatype='real' name='[extreme_poverty]' role='measure' type='quantitative' />
      <column caption='Female Smokers' datatype='real' name='[female_smokers]' role='measure' type='quantitative' />
      <column caption='Gdp Per Capita' datatype='real' name='[gdp_per_capita]' role='measure' type='quantitative' />
      <column caption='Handwashing Facilities' datatype='real' name='[handwashing_facilities]' role='measure' type='quantitative' />
      <column caption='Hosp Patients' datatype='string' name='[hosp_patients]' role='dimension' type='nominal' />
      <column caption='Hosp Patients Per Million' datatype='string' name='[hosp_patients_per_million]' role='dimension' type='nominal' />
      <column caption='Hospital Beds Per Thousand' datatype='real' name='[hospital_beds_per_thousand]' role='measure' type='quantitative' />
      <column caption='Human Development Index' datatype='real' name='[human_development_index]' role='measure' type='quantitative' />
      <column caption='Icu Patients' datatype='string' name='[icu_patients]' role='dimension' type='nominal' />
      <column caption='Icu Patients Per Million' datatype='string' name='[icu_patients_per_million]' role='dimension' type='nominal' />
      <column caption='Iso Code' datatype='string' name='[iso_code]' role='dimension' type='nominal' />
      <column caption='Life Expectancy' datatype='real' name='[life_expectancy]' role='measure' type='quantitative' />
      <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
      <column caption='Male Smokers' datatype='real' name='[male_smokers]' role='measure' type='quantitative' />
      <column caption='Median Age' datatype='real' name='[median_age]' role='measure' type='quantitative' />
      <column caption='New Cases' datatype='real' name='[new_cases]' role='measure' type='quantitative' />
      <column caption='New Cases Per Million' datatype='real' name='[new_cases_per_million]' role='measure' type='quantitative' />
      <column caption='New Cases Smoothed' datatype='real' name='[new_cases_smoothed]' role='measure' type='quantitative' />
      <column caption='New Cases Smoothed Per Million' datatype='real' name='[new_cases_smoothed_per_million]' role='measure' type='quantitative' />
      <column caption='New Deaths' datatype='real' name='[new_deaths]' role='measure' type='quantitative' />
      <column caption='New Deaths Per Million' datatype='real' name='[new_deaths_per_million]' role='measure' type='quantitative' />
      <column caption='New Deaths Smoothed' datatype='real' name='[new_deaths_smoothed]' role='measure' type='quantitative' />
      <column caption='New Deaths Smoothed Per Million' datatype='real' name='[new_deaths_smoothed_per_million]' role='measure' type='quantitative' />
      <column caption='New Tests' datatype='real' name='[new_tests]' role='measure' type='quantitative' />
      <column caption='New Tests Per Thousand' datatype='real' name='[new_tests_per_thousand]' role='measure' type='quantitative' />
      <column caption='New Tests Smoothed' datatype='real' name='[new_tests_smoothed]' role='measure' type='quantitative' />
      <column caption='New Tests Smoothed Per Thousand' datatype='real' name='[new_tests_smoothed_per_thousand]' role='measure' type='quantitative' />
      <column caption='New Vaccinations' datatype='real' name='[new_vaccinations]' role='measure' type='quantitative' />
      <column caption='New Vaccinations Smoothed' datatype='real' name='[new_vaccinations_smoothed]' role='measure' type='quantitative' />
      <column caption='New Vaccinations Smoothed Per Million' datatype='real' name='[new_vaccinations_smoothed_per_million]' role='measure' type='quantitative' />
      <column caption='People Fully Vaccinated' datatype='real' name='[people_fully_vaccinated]' role='measure' type='quantitative' />
      <column caption='People Fully Vaccinated Per Hundred' datatype='real' name='[people_fully_vaccinated_per_hundred]' role='measure' type='quantitative' />
      <column caption='People Vaccinated' datatype='real' name='[people_vaccinated]' role='measure' type='quantitative' />
      <column caption='People Vaccinated Per Hundred' datatype='real' name='[people_vaccinated_per_hundred]' role='measure' type='quantitative' />
      <column caption='Population' datatype='real' name='[population]' role='measure' type='quantitative' />
      <column caption='Population Density' datatype='real' name='[population_density]' role='measure' type='quantitative' />
      <column caption='Positive Rate' datatype='real' name='[positive_rate]' role='measure' type='quantitative' />
      <column caption='Reproduction Rate' datatype='real' name='[reproduction_rate]' role='measure' type='quantitative' />
      <column caption='Stringency Index' datatype='real' name='[stringency_index]' role='measure' type='quantitative' />
      <column caption='Tests Per Case' datatype='real' name='[tests_per_case]' role='measure' type='quantitative' />
      <column caption='Tests Units' datatype='string' name='[tests_units]' role='dimension' type='nominal' />
      <column caption='Total Cases' datatype='real' name='[total_cases]' role='measure' type='quantitative' />
      <column caption='Total Cases Per Million' datatype='real' name='[total_cases_per_million]' role='measure' type='quantitative' />
      <column caption='Total Deaths' datatype='real' name='[total_deaths]' role='measure' type='quantitative' />
      <column caption='Total Deaths Per Million' datatype='real' name='[total_deaths_per_million]' role='measure' type='quantitative' />
      <column caption='Total Tests' datatype='real' name='[total_tests]' role='measure' type='quantitative' />
      <column caption='Total Tests Per Thousand' datatype='real' name='[total_tests_per_thousand]' role='measure' type='quantitative' />
      <column caption='Total Vaccinations' datatype='real' name='[total_vaccinations]' role='measure' type='quantitative' />
      <column caption='Total Vaccinations Per Hundred' datatype='real' name='[total_vaccinations_per_hundred]' role='measure' type='quantitative' />
      <column caption='Weekly Hosp Admissions' datatype='string' name='[weekly_hosp_admissions]' role='dimension' type='nominal' />
      <column caption='Weekly Hosp Admissions Per Million' datatype='string' name='[weekly_hosp_admissions_per_million]' role='dimension' type='nominal' />
      <column caption='Weekly Icu Admissions' datatype='string' name='[weekly_icu_admissions]' role='dimension' type='nominal' />
      <column caption='Weekly Icu Admissions Per Million' datatype='string' name='[weekly_icu_admissions_per_million]' role='dimension' type='nominal' />
      <column-instance column='[total_cases]' derivation='Sum' name='[diff:sum:total_cases:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
      <column-instance column='[cardiovasc_death_rate]' derivation='Sum' name='[sum:cardiovasc_death_rate:qk]' pivot='key' type='quantitative' />
      <column-instance column='[diabetes_prevalence]' derivation='Sum' name='[sum:diabetes_prevalence:qk]' pivot='key' type='quantitative' />
      <column-instance column='[female_smokers]' derivation='Sum' name='[sum:female_smokers:qk]' pivot='key' type='quantitative' />
      <column-instance column='[gdp_per_capita]' derivation='Sum' name='[sum:gdp_per_capita:qk]' pivot='key' type='quantitative' />
      <column-instance column='[handwashing_facilities]' derivation='Sum' name='[sum:handwashing_facilities:qk]' pivot='key' type='quantitative' />
      <column-instance column='[human_development_index]' derivation='Sum' name='[sum:human_development_index:qk]' pivot='key' type='quantitative' />
      <column-instance column='[life_expectancy]' derivation='Sum' name='[sum:life_expectancy:qk]' pivot='key' type='quantitative' />
      <column-instance column='[male_smokers]' derivation='Sum' name='[sum:male_smokers:qk]' pivot='key' type='quantitative' />
      <column-instance column='[new_cases]' derivation='Sum' name='[sum:new_cases:qk]' pivot='key' type='quantitative' />
      <column-instance column='[new_deaths]' derivation='Sum' name='[sum:new_deaths:qk]' pivot='key' type='quantitative' />
      <column-instance column='[people_vaccinated]' derivation='Sum' name='[sum:people_vaccinated:qk]' pivot='key' type='quantitative' />
      <column-instance column='[population_density]' derivation='Sum' name='[sum:population_density:qk]' pivot='key' type='quantitative' />
      <column-instance column='[stringency_index]' derivation='Sum' name='[sum:stringency_index:qk]' pivot='key' type='quantitative' />
      <column-instance column='[total_cases]' derivation='Sum' name='[sum:total_cases:qk]' pivot='key' type='quantitative' />
      <column-instance column='[total_deaths]' derivation='Sum' name='[sum:total_deaths:qk]' pivot='key' type='quantitative' />
      <column-instance column='[total_tests]' derivation='Sum' name='[sum:total_tests:qk]' pivot='key' type='quantitative' />
      <column-instance column='[total_vaccinations]' derivation='Sum' name='[sum:total_vaccinations:qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ezkvbd1x7q9fn17he4if15ah0ng]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ezkvbd1x7q9fn17he4if15ah0ng].[diff:sum:total_cases:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ezkvbd1x7q9fn17he4if15ah0ng].[sum:gdp_per_capita:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ezkvbd1x7q9fn17he4if15ah0ng].[sum:handwashing_facilities:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ezkvbd1x7q9fn17he4if15ah0ng].[sum:total_cases:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1ezkvbd1x7q9fn17he4if15ah0ng].[sum:diabetes_prevalence:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1ezkvbd1x7q9fn17he4if15ah0ng].[sum:cardiovasc_death_rate:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1ezkvbd1x7q9fn17he4if15ah0ng].[sum:people_vaccinated:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1ezkvbd1x7q9fn17he4if15ah0ng].[sum:population_density:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1ezkvbd1x7q9fn17he4if15ah0ng].[sum:stringency_index:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1ezkvbd1x7q9fn17he4if15ah0ng].[sum:total_vaccinations:qk]&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;[federated.1ezkvbd1x7q9fn17he4if15ah0ng].[sum:female_smokers:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.1ezkvbd1x7q9fn17he4if15ah0ng].[sum:total_deaths:qk]:2&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1ezkvbd1x7q9fn17he4if15ah0ng].[sum:life_expectancy:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1ezkvbd1x7q9fn17he4if15ah0ng].[sum:new_deaths:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1ezkvbd1x7q9fn17he4if15ah0ng].[sum:total_deaths:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.1ezkvbd1x7q9fn17he4if15ah0ng].[sum:total_deaths:qk]:1&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1ezkvbd1x7q9fn17he4if15ah0ng].[sum:human_development_index:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1ezkvbd1x7q9fn17he4if15ah0ng].[sum:new_cases:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1ezkvbd1x7q9fn17he4if15ah0ng].[sum:total_tests:qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.1ezkvbd1x7q9fn17he4if15ah0ng].[sum:male_smokers:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:location:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Northern Cyprus&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Vatican&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Micronesia (country)&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;European Union&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;International&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Timor&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='owid-covid-data.csv' id='owid-covid-data.csv_0AA94EB83FD94838A20F267554633CE4'>
            <properties context=''>
              <relation connection='textscan.1r9m8141xzbcem179joac1wwx3x2' name='owid-covid-data.csv' table='[owid-covid-data#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='string' name='iso_code' ordinal='0' />
                  <column datatype='string' name='continent' ordinal='1' />
                  <column datatype='string' name='location' ordinal='2' />
                  <column datatype='date' name='date' ordinal='3' />
                  <column datatype='real' name='total_cases' ordinal='4' />
                  <column datatype='real' name='new_cases' ordinal='5' />
                  <column datatype='real' name='new_cases_smoothed' ordinal='6' />
                  <column datatype='real' name='total_deaths' ordinal='7' />
                  <column datatype='real' name='new_deaths' ordinal='8' />
                  <column datatype='real' name='new_deaths_smoothed' ordinal='9' />
                  <column datatype='real' name='total_cases_per_million' ordinal='10' />
                  <column datatype='real' name='new_cases_per_million' ordinal='11' />
                  <column datatype='real' name='new_cases_smoothed_per_million' ordinal='12' />
                  <column datatype='real' name='total_deaths_per_million' ordinal='13' />
                  <column datatype='real' name='new_deaths_per_million' ordinal='14' />
                  <column datatype='real' name='new_deaths_smoothed_per_million' ordinal='15' />
                  <column datatype='real' name='reproduction_rate' ordinal='16' />
                  <column datatype='string' name='icu_patients' ordinal='17' />
                  <column datatype='string' name='icu_patients_per_million' ordinal='18' />
                  <column datatype='string' name='hosp_patients' ordinal='19' />
                  <column datatype='string' name='hosp_patients_per_million' ordinal='20' />
                  <column datatype='string' name='weekly_icu_admissions' ordinal='21' />
                  <column datatype='string' name='weekly_icu_admissions_per_million' ordinal='22' />
                  <column datatype='string' name='weekly_hosp_admissions' ordinal='23' />
                  <column datatype='string' name='weekly_hosp_admissions_per_million' ordinal='24' />
                  <column datatype='real' name='new_tests' ordinal='25' />
                  <column datatype='real' name='total_tests' ordinal='26' />
                  <column datatype='real' name='total_tests_per_thousand' ordinal='27' />
                  <column datatype='real' name='new_tests_per_thousand' ordinal='28' />
                  <column datatype='real' name='new_tests_smoothed' ordinal='29' />
                  <column datatype='real' name='new_tests_smoothed_per_thousand' ordinal='30' />
                  <column datatype='real' name='positive_rate' ordinal='31' />
                  <column datatype='real' name='tests_per_case' ordinal='32' />
                  <column datatype='string' name='tests_units' ordinal='33' />
                  <column datatype='real' name='total_vaccinations' ordinal='34' />
                  <column datatype='real' name='people_vaccinated' ordinal='35' />
                  <column datatype='real' name='people_fully_vaccinated' ordinal='36' />
                  <column datatype='real' name='new_vaccinations' ordinal='37' />
                  <column datatype='real' name='new_vaccinations_smoothed' ordinal='38' />
                  <column datatype='real' name='total_vaccinations_per_hundred' ordinal='39' />
                  <column datatype='real' name='people_vaccinated_per_hundred' ordinal='40' />
                  <column datatype='real' name='people_fully_vaccinated_per_hundred' ordinal='41' />
                  <column datatype='real' name='new_vaccinations_smoothed_per_million' ordinal='42' />
                  <column datatype='real' name='stringency_index' ordinal='43' />
                  <column datatype='real' name='population' ordinal='44' />
                  <column datatype='real' name='population_density' ordinal='45' />
                  <column datatype='real' name='median_age' ordinal='46' />
                  <column datatype='real' name='aged_65_older' ordinal='47' />
                  <column datatype='real' name='aged_70_older' ordinal='48' />
                  <column datatype='real' name='gdp_per_capita' ordinal='49' />
                  <column datatype='real' name='extreme_poverty' ordinal='50' />
                  <column datatype='real' name='cardiovasc_death_rate' ordinal='51' />
                  <column datatype='real' name='diabetes_prevalence' ordinal='52' />
                  <column datatype='real' name='female_smokers' ordinal='53' />
                  <column datatype='real' name='male_smokers' ordinal='54' />
                  <column datatype='real' name='handwashing_facilities' ordinal='55' />
                  <column datatype='real' name='hospital_beds_per_thousand' ordinal='56' />
                  <column datatype='real' name='life_expectancy' ordinal='57' />
                  <column datatype='real' name='human_development_index' ordinal='58' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Cases/Deaths (Country - Month)'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#f28e2b' fontname='Tableau Bold'>Cases/Deaths (Country - Month)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='owid-covid-data' name='federated.1ezkvbd1x7q9fn17he4if15ah0ng' />
          </datasources>
          <datasource-dependencies datasource='federated.1ezkvbd1x7q9fn17he4if15ah0ng'>
            <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[total_cases]' derivation='Sum' name='[sum:total_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_deaths]' derivation='Sum' name='[sum:total_deaths:qk]' pivot='key' type='quantitative' />
            <column caption='Total Cases' datatype='real' name='[total_cases]' role='measure' type='quantitative' />
            <column caption='Total Deaths' datatype='real' name='[total_deaths]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ezkvbd1x7q9fn17he4if15ah0ng].[none:location:nk]'>
            <groupfilter count='25' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([total_cases])' function='order' user:ui-marker='order'>
                <groupfilter from='&quot;Afghanistan&quot;' function='range' level='[none:location:nk]' to='&quot;Zimbabwe&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1ezkvbd1x7q9fn17he4if15ah0ng].[sum:total_deaths:qk]' included-values='non-null' />
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1ezkvbd1x7q9fn17he4if15ah0ng].[none:location:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1ezkvbd1x7q9fn17he4if15ah0ng].[sum:total_cases:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1ezkvbd1x7q9fn17he4if15ah0ng].[sum:total_deaths:qk]</column>
            <column>[federated.1ezkvbd1x7q9fn17he4if15ah0ng].[none:location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1ezkvbd1x7q9fn17he4if15ah0ng].[none:location:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1ezkvbd1x7q9fn17he4if15ah0ng].[sum:total_cases:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1ezkvbd1x7q9fn17he4if15ah0ng].[none:location:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1ezkvbd1x7q9fn17he4if15ah0ng].[sum:total_deaths:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1ezkvbd1x7q9fn17he4if15ah0ng].[none:location:nk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='right' />
                <format attr='vertical-align' value='auto' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1ezkvbd1x7q9fn17he4if15ah0ng].[none:location:nk]</rows>
        <cols>([federated.1ezkvbd1x7q9fn17he4if15ah0ng].[sum:total_cases:qk] + [federated.1ezkvbd1x7q9fn17he4if15ah0ng].[sum:total_deaths:qk])</cols>
      </table>
      <simple-id uuid='{F5283F99-0835-485C-AB7A-7F9A65551F08}' />
    </worksheet>
    <worksheet name='Deaths/Medical-Condition'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#f28e2b' fontname='Tableau Bold' underline='true'>Deaths/Medical-Condition Relation</run>
            <run bold='true' fontalignment='1' fontcolor='#f28e2b' fontname='Tableau Bold'> (India)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='owid-covid-data' name='federated.1ezkvbd1x7q9fn17he4if15ah0ng' />
          </datasources>
          <datasource-dependencies datasource='federated.1ezkvbd1x7q9fn17he4if15ah0ng'>
            <column caption='Cardiovasc Death Rate' datatype='real' name='[cardiovasc_death_rate]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Diabetes Prevalence' datatype='real' name='[diabetes_prevalence]' role='measure' type='quantitative' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[date]' derivation='Max' name='[max:date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[cardiovasc_death_rate]' derivation='Sum' name='[sum:cardiovasc_death_rate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[diabetes_prevalence]' derivation='Sum' name='[sum:diabetes_prevalence:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_deaths]' derivation='Sum' name='[sum:total_deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
            <column caption='Total Deaths' datatype='real' name='[total_deaths]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ezkvbd1x7q9fn17he4if15ah0ng].[none:location:nk]'>
            <groupfilter function='member' level='[none:location:nk]' member='&quot;India&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1ezkvbd1x7q9fn17he4if15ah0ng].[sum:total_deaths:qk]' included-values='non-null' />
          <slices>
            <column>[federated.1ezkvbd1x7q9fn17he4if15ah0ng].[none:location:nk]</column>
            <column>[federated.1ezkvbd1x7q9fn17he4if15ah0ng].[sum:total_deaths:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1ezkvbd1x7q9fn17he4if15ah0ng].[sum:cardiovasc_death_rate:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[federated.1ezkvbd1x7q9fn17he4if15ah0ng].[sum:diabetes_prevalence:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1ezkvbd1x7q9fn17he4if15ah0ng].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1ezkvbd1x7q9fn17he4if15ah0ng].[sum:total_deaths:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1ezkvbd1x7q9fn17he4if15ah0ng].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='range' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1ezkvbd1x7q9fn17he4if15ah0ng].[sum:cardiovasc_death_rate:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1ezkvbd1x7q9fn17he4if15ah0ng].[:Measure Names]' />
            </encodings>
            <label-data column='[federated.1ezkvbd1x7q9fn17he4if15ah0ng].[max:date:qk]' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='most-recent' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1ezkvbd1x7q9fn17he4if15ah0ng].[sum:diabetes_prevalence:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1ezkvbd1x7q9fn17he4if15ah0ng].[:Measure Names]' />
            </encodings>
            <label-data column='[federated.1ezkvbd1x7q9fn17he4if15ah0ng].[max:date:qk]' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='most-recent' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1ezkvbd1x7q9fn17he4if15ah0ng].[sum:total_deaths:qk]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1ezkvbd1x7q9fn17he4if15ah0ng].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='range' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1ezkvbd1x7q9fn17he4if15ah0ng].[sum:total_deaths:qk] + ([federated.1ezkvbd1x7q9fn17he4if15ah0ng].[sum:cardiovasc_death_rate:qk] + ([federated.1ezkvbd1x7q9fn17he4if15ah0ng].[sum:total_deaths:qk] + [federated.1ezkvbd1x7q9fn17he4if15ah0ng].[sum:diabetes_prevalence:qk])))</rows>
        <cols>[federated.1ezkvbd1x7q9fn17he4if15ah0ng].[tmn:date:qk]</cols>
        <mark-labels>
          <mark-label id='1' label-state='off'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1ezkvbd1x7q9fn17he4if15ah0ng].[tmn:date:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1ezkvbd1x7q9fn17he4if15ah0ng].[sum:cardiovasc_death_rate:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1ezkvbd1x7q9fn17he4if15ah0ng].[max:date:qk]</field>
                  <field>[federated.1ezkvbd1x7q9fn17he4if15ah0ng].[sum:cardiovasc_death_rate:qk]</field>
                  <field>[federated.1ezkvbd1x7q9fn17he4if15ah0ng].[tmn:date:qk]</field>
                  <field>[federated.1ezkvbd1x7q9fn17he4if15ah0ng].[:Measure Names]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>#2021-04-30#</value>
                <value>8468.3999999999942</value>
                <value>#2021-04-01 00:00:00#</value>
                <value>&quot;[federated.1ezkvbd1x7q9fn17he4if15ah0ng].[sum:cardiovasc_death_rate:qk]&quot;</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='3' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1ezkvbd1x7q9fn17he4if15ah0ng].[tmn:date:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1ezkvbd1x7q9fn17he4if15ah0ng].[sum:cardiovasc_death_rate:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1ezkvbd1x7q9fn17he4if15ah0ng].[max:date:qk]</field>
                  <field>[federated.1ezkvbd1x7q9fn17he4if15ah0ng].[sum:cardiovasc_death_rate:qk]</field>
                  <field>[federated.1ezkvbd1x7q9fn17he4if15ah0ng].[tmn:date:qk]</field>
                  <field>[federated.1ezkvbd1x7q9fn17he4if15ah0ng].[:Measure Names]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>#2020-03-31#</value>
                <value>8750.6799999999948</value>
                <value>#2020-03-01 00:00:00#</value>
                <value>&quot;[federated.1ezkvbd1x7q9fn17he4if15ah0ng].[sum:cardiovasc_death_rate:qk]&quot;</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='4' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1ezkvbd1x7q9fn17he4if15ah0ng].[tmn:date:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1ezkvbd1x7q9fn17he4if15ah0ng].[sum:diabetes_prevalence:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1ezkvbd1x7q9fn17he4if15ah0ng].[max:date:qk]</field>
                  <field>[federated.1ezkvbd1x7q9fn17he4if15ah0ng].[sum:diabetes_prevalence:qk]</field>
                  <field>[federated.1ezkvbd1x7q9fn17he4if15ah0ng].[tmn:date:qk]</field>
                  <field>[federated.1ezkvbd1x7q9fn17he4if15ah0ng].[:Measure Names]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>#2020-03-31#</value>
                <value>322.08999999999975</value>
                <value>#2020-03-01 00:00:00#</value>
                <value>&quot;[federated.1ezkvbd1x7q9fn17he4if15ah0ng].[sum:diabetes_prevalence:qk]&quot;</value>
              </tuple>
            </tuple-reference>
          </mark-label>
        </mark-labels>
      </table>
      <simple-id uuid='{6F24A6C3-A70C-40DF-8719-9B56F1B3E02D}' />
    </worksheet>
    <worksheet name='India'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#f28e2b' fontname='Tableau Bold'>Tests/Cases/Deaths (India)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='owid-covid-data' name='federated.1ezkvbd1x7q9fn17he4if15ah0ng' />
          </datasources>
          <datasource-dependencies datasource='federated.1ezkvbd1x7q9fn17he4if15ah0ng'>
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[total_cases]' derivation='Sum' name='[sum:total_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_deaths]' derivation='Sum' name='[sum:total_deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_tests]' derivation='Sum' name='[sum:total_tests:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_vaccinations]' derivation='Sum' name='[sum:total_vaccinations:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
            <column caption='Total Cases' datatype='real' name='[total_cases]' role='measure' type='quantitative' />
            <column caption='Total Deaths' datatype='real' name='[total_deaths]' role='measure' type='quantitative' />
            <column caption='Total Tests' datatype='real' name='[total_tests]' role='measure' type='quantitative' />
            <column caption='Total Vaccinations' datatype='real' name='[total_vaccinations]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ezkvbd1x7q9fn17he4if15ah0ng].[none:location:nk]'>
            <groupfilter function='member' level='[none:location:nk]' member='&quot;India&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1ezkvbd1x7q9fn17he4if15ah0ng].[sum:total_deaths:qk]' included-values='non-null' />
          <slices>
            <column>[federated.1ezkvbd1x7q9fn17he4if15ah0ng].[none:location:nk]</column>
            <column>[federated.1ezkvbd1x7q9fn17he4if15ah0ng].[sum:total_deaths:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1ezkvbd1x7q9fn17he4if15ah0ng].[sum:total_deaths:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[federated.1ezkvbd1x7q9fn17he4if15ah0ng].[sum:total_vaccinations:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1ezkvbd1x7q9fn17he4if15ah0ng].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='line-interpolation' value='linear' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1ezkvbd1x7q9fn17he4if15ah0ng].[sum:total_cases:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1ezkvbd1x7q9fn17he4if15ah0ng].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='left' />
                <format attr='vertical-align' value='auto' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-mode' value='range' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='line-interpolation' value='linear' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1ezkvbd1x7q9fn17he4if15ah0ng].[sum:total_deaths:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1ezkvbd1x7q9fn17he4if15ah0ng].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='vertical-align' value='bottom' />
                <format attr='text-align' value='auto' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-mode' value='range' />
                <format attr='mark-labels-range-field' value='[federated.1ezkvbd1x7q9fn17he4if15ah0ng].[sum:total_deaths:qk]' />
                <format attr='mark-labels-range-scope' value='cell' />
                <format attr='line-interpolation' value='linear' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1ezkvbd1x7q9fn17he4if15ah0ng].[sum:total_tests:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1ezkvbd1x7q9fn17he4if15ah0ng].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='left' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='line-interpolation' value='linear' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='range' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1ezkvbd1x7q9fn17he4if15ah0ng].[sum:total_vaccinations:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1ezkvbd1x7q9fn17he4if15ah0ng].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='right' />
                <format attr='vertical-align' value='bottom' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='line-interpolation' value='linear' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='range' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1ezkvbd1x7q9fn17he4if15ah0ng].[sum:total_tests:qk] + ([federated.1ezkvbd1x7q9fn17he4if15ah0ng].[sum:total_vaccinations:qk] + ([federated.1ezkvbd1x7q9fn17he4if15ah0ng].[sum:total_cases:qk] + [federated.1ezkvbd1x7q9fn17he4if15ah0ng].[sum:total_deaths:qk])))</rows>
        <cols>[federated.1ezkvbd1x7q9fn17he4if15ah0ng].[tmn:date:qk]</cols>
      </table>
      <simple-id uuid='{1C53E6AF-9E8D-4217-945D-3306BB102456}' />
    </worksheet>
    <worksheet name='Reasons for Higher Deaths/Cases'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#f28e2b' fontname='Tableau Bold' underline='true'>Possible Reasons for Higher Deaths/Cases</run>
            <run bold='true' fontalignment='1' fontcolor='#f28e2b' fontname='Tableau Bold'> (India - </run>
            <run fontalignment='1' fontcolor='#f28e2b'>Stringency Index + Facilities</run>
            <run bold='true' fontalignment='1' fontcolor='#f28e2b' fontname='Tableau Bold'>)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='owid-covid-data' name='federated.1ezkvbd1x7q9fn17he4if15ah0ng' />
          </datasources>
          <datasource-dependencies datasource='federated.1ezkvbd1x7q9fn17he4if15ah0ng'>
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Handwashing Facilities' datatype='real' name='[handwashing_facilities]' role='measure' type='quantitative' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column caption='New Cases' datatype='real' name='[new_cases]' role='measure' type='quantitative' />
            <column caption='New Deaths' datatype='real' name='[new_deaths]' role='measure' type='quantitative' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column caption='Stringency Index' datatype='real' name='[stringency_index]' role='measure' type='quantitative' />
            <column-instance column='[handwashing_facilities]' derivation='Sum' name='[sum:handwashing_facilities:qk]' pivot='key' type='quantitative' />
            <column-instance column='[new_cases]' derivation='Sum' name='[sum:new_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[new_deaths]' derivation='Sum' name='[sum:new_deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[stringency_index]' derivation='Sum' name='[sum:stringency_index:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ezkvbd1x7q9fn17he4if15ah0ng].[none:location:nk]'>
            <groupfilter function='member' level='[none:location:nk]' member='&quot;India&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1ezkvbd1x7q9fn17he4if15ah0ng].[none:location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1ezkvbd1x7q9fn17he4if15ah0ng].[sum:handwashing_facilities:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[federated.1ezkvbd1x7q9fn17he4if15ah0ng].[sum:stringency_index:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1ezkvbd1x7q9fn17he4if15ah0ng].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1ezkvbd1x7q9fn17he4if15ah0ng].[sum:new_cases:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1ezkvbd1x7q9fn17he4if15ah0ng].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='vertical-align' value='top' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='range' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1ezkvbd1x7q9fn17he4if15ah0ng].[sum:handwashing_facilities:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1ezkvbd1x7q9fn17he4if15ah0ng].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='left' />
                <format attr='vertical-align' value='top' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='range' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1ezkvbd1x7q9fn17he4if15ah0ng].[sum:new_deaths:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1ezkvbd1x7q9fn17he4if15ah0ng].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='vertical-align' value='top' />
                <format attr='text-align' value='left' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-mode' value='range' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1ezkvbd1x7q9fn17he4if15ah0ng].[sum:stringency_index:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1ezkvbd1x7q9fn17he4if15ah0ng].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='vertical-align' value='top' />
                <format attr='text-align' value='left' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='range' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1ezkvbd1x7q9fn17he4if15ah0ng].[sum:new_cases:qk] + ([federated.1ezkvbd1x7q9fn17he4if15ah0ng].[sum:handwashing_facilities:qk] + ([federated.1ezkvbd1x7q9fn17he4if15ah0ng].[sum:new_deaths:qk] + [federated.1ezkvbd1x7q9fn17he4if15ah0ng].[sum:stringency_index:qk])))</rows>
        <cols>[federated.1ezkvbd1x7q9fn17he4if15ah0ng].[tmn:date:qk]</cols>
        <mark-labels>
          <mark-label id='0' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1ezkvbd1x7q9fn17he4if15ah0ng].[tmn:date:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1ezkvbd1x7q9fn17he4if15ah0ng].[sum:stringency_index:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1ezkvbd1x7q9fn17he4if15ah0ng].[sum:stringency_index:qk]</field>
                  <field>[federated.1ezkvbd1x7q9fn17he4if15ah0ng].[tmn:date:qk]</field>
                  <field>[federated.1ezkvbd1x7q9fn17he4if15ah0ng].[:Measure Names]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>2126.8799999999987</value>
                <value>#2021-04-01 00:00:00#</value>
                <value>&quot;[federated.1ezkvbd1x7q9fn17he4if15ah0ng].[sum:stringency_index:qk]&quot;</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='1' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1ezkvbd1x7q9fn17he4if15ah0ng].[tmn:date:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1ezkvbd1x7q9fn17he4if15ah0ng].[sum:new_deaths:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1ezkvbd1x7q9fn17he4if15ah0ng].[sum:new_deaths:qk]</field>
                  <field>[federated.1ezkvbd1x7q9fn17he4if15ah0ng].[tmn:date:qk]</field>
                  <field>[federated.1ezkvbd1x7q9fn17he4if15ah0ng].[:Measure Names]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>1119.0</value>
                <value>#2020-04-01 00:00:00#</value>
                <value>&quot;[federated.1ezkvbd1x7q9fn17he4if15ah0ng].[sum:new_deaths:qk]&quot;</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='2' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1ezkvbd1x7q9fn17he4if15ah0ng].[tmn:date:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1ezkvbd1x7q9fn17he4if15ah0ng].[sum:new_cases:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1ezkvbd1x7q9fn17he4if15ah0ng].[sum:new_cases:qk]</field>
                  <field>[federated.1ezkvbd1x7q9fn17he4if15ah0ng].[tmn:date:qk]</field>
                  <field>[federated.1ezkvbd1x7q9fn17he4if15ah0ng].[:Measure Names]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>33466.0</value>
                <value>#2020-04-01 00:00:00#</value>
                <value>&quot;[federated.1ezkvbd1x7q9fn17he4if15ah0ng].[sum:new_cases:qk]&quot;</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='3' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1ezkvbd1x7q9fn17he4if15ah0ng].[tmn:date:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1ezkvbd1x7q9fn17he4if15ah0ng].[sum:new_cases:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1ezkvbd1x7q9fn17he4if15ah0ng].[sum:new_cases:qk]</field>
                  <field>[federated.1ezkvbd1x7q9fn17he4if15ah0ng].[tmn:date:qk]</field>
                  <field>[federated.1ezkvbd1x7q9fn17he4if15ah0ng].[:Measure Names]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>1394.0</value>
                <value>#2020-03-01 00:00:00#</value>
                <value>&quot;[federated.1ezkvbd1x7q9fn17he4if15ah0ng].[sum:new_cases:qk]&quot;</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='4' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1ezkvbd1x7q9fn17he4if15ah0ng].[tmn:date:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1ezkvbd1x7q9fn17he4if15ah0ng].[sum:handwashing_facilities:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1ezkvbd1x7q9fn17he4if15ah0ng].[sum:handwashing_facilities:qk]</field>
                  <field>[federated.1ezkvbd1x7q9fn17he4if15ah0ng].[tmn:date:qk]</field>
                  <field>[federated.1ezkvbd1x7q9fn17he4if15ah0ng].[:Measure Names]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>1786.4999999999991</value>
                <value>#2020-04-01 00:00:00#</value>
                <value>&quot;[federated.1ezkvbd1x7q9fn17he4if15ah0ng].[sum:handwashing_facilities:qk]&quot;</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='5' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1ezkvbd1x7q9fn17he4if15ah0ng].[tmn:date:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1ezkvbd1x7q9fn17he4if15ah0ng].[sum:handwashing_facilities:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1ezkvbd1x7q9fn17he4if15ah0ng].[sum:handwashing_facilities:qk]</field>
                  <field>[federated.1ezkvbd1x7q9fn17he4if15ah0ng].[tmn:date:qk]</field>
                  <field>[federated.1ezkvbd1x7q9fn17he4if15ah0ng].[:Measure Names]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>1846.049999999999</value>
                <value>#2020-03-01 00:00:00#</value>
                <value>&quot;[federated.1ezkvbd1x7q9fn17he4if15ah0ng].[sum:handwashing_facilities:qk]&quot;</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='6' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1ezkvbd1x7q9fn17he4if15ah0ng].[tmn:date:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1ezkvbd1x7q9fn17he4if15ah0ng].[sum:handwashing_facilities:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1ezkvbd1x7q9fn17he4if15ah0ng].[sum:handwashing_facilities:qk]</field>
                  <field>[federated.1ezkvbd1x7q9fn17he4if15ah0ng].[tmn:date:qk]</field>
                  <field>[federated.1ezkvbd1x7q9fn17he4if15ah0ng].[:Measure Names]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>119.09999999999999</value>
                <value>#2020-01-01 00:00:00#</value>
                <value>&quot;[federated.1ezkvbd1x7q9fn17he4if15ah0ng].[sum:handwashing_facilities:qk]&quot;</value>
              </tuple>
            </tuple-reference>
          </mark-label>
        </mark-labels>
      </table>
      <simple-id uuid='{58BFE52C-A660-4A4F-BD60-87384F70BF4E}' />
    </worksheet>
    <worksheet name='Tests/Cases (Continent)'>
      <table>
        <view>
          <datasources>
            <datasource caption='owid-covid-data' name='federated.1ezkvbd1x7q9fn17he4if15ah0ng' />
          </datasources>
          <datasource-dependencies datasource='federated.1ezkvbd1x7q9fn17he4if15ah0ng'>
            <column caption='Continent' datatype='string' name='[continent]' role='dimension' type='nominal' />
            <column-instance column='[continent]' derivation='None' name='[none:continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[total_cases]' derivation='Sum' name='[sum:total_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_tests]' derivation='Sum' name='[sum:total_tests:qk]' pivot='key' type='quantitative' />
            <column caption='Total Cases' datatype='real' name='[total_cases]' role='measure' type='quantitative' />
            <column caption='Total Tests' datatype='real' name='[total_tests]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ezkvbd1x7q9fn17he4if15ah0ng].[none:continent:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:continent:nk]' />
              <groupfilter function='member' level='[none:continent:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1ezkvbd1x7q9fn17he4if15ah0ng].[none:continent:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1ezkvbd1x7q9fn17he4if15ah0ng].[sum:total_tests:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.1ezkvbd1x7q9fn17he4if15ah0ng].[none:continent:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1ezkvbd1x7q9fn17he4if15ah0ng].[sum:total_cases:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane id='10' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1ezkvbd1x7q9fn17he4if15ah0ng].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='11' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1ezkvbd1x7q9fn17he4if15ah0ng].[sum:total_tests:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1ezkvbd1x7q9fn17he4if15ah0ng].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='12' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1ezkvbd1x7q9fn17he4if15ah0ng].[sum:total_cases:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1ezkvbd1x7q9fn17he4if15ah0ng].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1ezkvbd1x7q9fn17he4if15ah0ng].[sum:total_tests:qk] + [federated.1ezkvbd1x7q9fn17he4if15ah0ng].[sum:total_cases:qk])</rows>
        <cols>[federated.1ezkvbd1x7q9fn17he4if15ah0ng].[none:continent:nk]</cols>
      </table>
      <simple-id uuid='{89004C83-F387-4622-BD55-21DEAE2C26DF}' />
    </worksheet>
    <worksheet name='Tests/Cases (Country)'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#f28e2b' fontname='Tableau Bold' underline='true'>Tests/Cases</run>
            <run bold='true' fontalignment='1' fontcolor='#f28e2b' fontname='Tableau Bold'> (Country)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='owid-covid-data' name='federated.1ezkvbd1x7q9fn17he4if15ah0ng' />
          </datasources>
          <datasource-dependencies datasource='federated.1ezkvbd1x7q9fn17he4if15ah0ng'>
            <column caption='Continent' datatype='string' name='[continent]' role='dimension' type='nominal' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[continent]' derivation='None' name='[none:continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[total_cases]' derivation='Sum' name='[sum:total_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_deaths]' derivation='Sum' name='[sum:total_deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_tests]' derivation='Sum' name='[sum:total_tests:qk]' pivot='key' type='quantitative' />
            <column caption='Total Cases' datatype='real' name='[total_cases]' role='measure' type='quantitative' />
            <column caption='Total Deaths' datatype='real' name='[total_deaths]' role='measure' type='quantitative' />
            <column caption='Total Tests' datatype='real' name='[total_tests]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ezkvbd1x7q9fn17he4if15ah0ng].[none:continent:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:continent:nk]' />
              <groupfilter function='member' level='[none:continent:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1ezkvbd1x7q9fn17he4if15ah0ng].[none:location:nk]'>
            <groupfilter count='25' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([total_cases])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:location:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1ezkvbd1x7q9fn17he4if15ah0ng].[sum:total_tests:qk]' included-values='non-null' />
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1ezkvbd1x7q9fn17he4if15ah0ng].[none:location:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1ezkvbd1x7q9fn17he4if15ah0ng].[sum:total_cases:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.1ezkvbd1x7q9fn17he4if15ah0ng].[none:continent:nk]</column>
            <column>[federated.1ezkvbd1x7q9fn17he4if15ah0ng].[none:location:nk]</column>
            <column>[federated.1ezkvbd1x7q9fn17he4if15ah0ng].[sum:total_tests:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1ezkvbd1x7q9fn17he4if15ah0ng].[none:location:nk]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1ezkvbd1x7q9fn17he4if15ah0ng].[sum:total_tests:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1ezkvbd1x7q9fn17he4if15ah0ng].[none:location:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1ezkvbd1x7q9fn17he4if15ah0ng].[sum:total_cases:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1ezkvbd1x7q9fn17he4if15ah0ng].[none:location:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1ezkvbd1x7q9fn17he4if15ah0ng].[sum:total_deaths:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1ezkvbd1x7q9fn17he4if15ah0ng].[none:location:nk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='vertical-align' value='auto' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1ezkvbd1x7q9fn17he4if15ah0ng].[sum:total_tests:qk] + ([federated.1ezkvbd1x7q9fn17he4if15ah0ng].[sum:total_cases:qk] + [federated.1ezkvbd1x7q9fn17he4if15ah0ng].[sum:total_deaths:qk]))</rows>
        <cols>[federated.1ezkvbd1x7q9fn17he4if15ah0ng].[none:location:nk]</cols>
      </table>
      <simple-id uuid='{B600E31E-2985-4432-BDE0-BA6E1F3C0567}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#f0eae8' />
        </style-rule>
      </style>
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='52375' id='3' name='Tests/Cases (Country)' w='99900' x='0' y='-250' />
        <zone h='50375' id='4' name='Cases/Deaths (Country - Month)' w='99600' x='100' y='49625' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='6' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98000' id='5' param='vert' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='52375' id='3' is-fixed='true' name='Tests/Cases (Country)' w='99900' x='0' y='-250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='50375' id='4' is-fixed='true' name='Cases/Deaths (Country - Month)' w='99600' x='100' y='49625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{41F49070-BF4B-4572-99E7-9D570D2F20C2}' />
    </dashboard>
    <dashboard name='Story 1' type='storyboard'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#f28e2b' fontname='Tableau Bold' underline='true'>COVID 19 - Analysis</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#f0eae8' />
        </style-rule>
        <style-rule element='story-point-caption'>
          <format attr='background-color' value='#555555' />
        </style-rule>
      </style>
      <size maxheight='964' maxwidth='1016' minheight='964' minwidth='1016' />
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='2' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98340' id='1' param='vert' removable='false' w='98426' x='787' y='830'>
            <zone _.fcp.SetMembershipControl.false...type='title' _.fcp.SetMembershipControl.true...type-v2='title' h='4253' id='3' w='98426' x='787' y='830' />
            <zone _.fcp.SetMembershipControl.false...type='flipboard-nav' _.fcp.SetMembershipControl.true...type-v2='flipboard-nav' h='10477' id='4' is-fixed='true' paired-zone-id='5' removable='false' w='98426' x='787' y='5083' />
            <zone _.fcp.SetMembershipControl.false...type='flipboard' _.fcp.SetMembershipControl.true...type-v2='flipboard' h='83610' id='5' paired-zone-id='4' removable='false' w='98426' x='787' y='15560'>
              <flipboard active-id='7' nav-type='caption' show-nav-arrows='true'>
                <story-points>
                  <story-point caption='This view represents the Total No. of Test/Cases per Continent' captured-sheet='Tests/Cases (Continent)' id='1' />
                  <story-point caption='This view represents the Total No. of Test/Cases per Country' captured-sheet='Tests/Cases (Country)' id='2' />
                  <story-point caption='This view represents the Total No. of Deaths/Cases per Country' captured-sheet='Cases/Deaths (Country - Month)' id='3' />
                  <story-point caption='This view represents the correlation b/w Vaccinations/Total Tests &amp; Deaths/Cases for India' captured-sheet='India' id='4' />
                  <story-point caption='This view represents the correlation b/w Cardiovascular Death Rate/Total Deaths &amp; Diabetes Prevalence/Total Deaths for India' captured-sheet='Deaths/Medical-Condition' id='5' />
                  <story-point caption='This view represents the correlation b/w Handwashing Facilities Available/New Cases &amp; Stringency Index/New Deaths for India' captured-sheet='Reasons for Higher Deaths/Cases' id='6' />
                  <story-point caption='This is the Dashboard View' captured-sheet='Dashboard 1' id='7'>
                    <capturedDeltas>
                      <worksheet name='Cases/Deaths (Country - Month)'>
                        <selection-collection />
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                </story-points>
              </flipboard>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <simple-id uuid='{2FF056D1-9BFC-4C1B-8749-3DD957B6DD60}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='Tests/Cases (Continent)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='11' param='[federated.1ezkvbd1x7q9fn17he4if15ah0ng].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.1ezkvbd1x7q9fn17he4if15ah0ng].[none:continent:nk]</field>
            <field>[federated.1ezkvbd1x7q9fn17he4if15ah0ng].[none:hosp_patients:nk]</field>
            <field>[federated.1ezkvbd1x7q9fn17he4if15ah0ng].[sum:median_age:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{92C94090-D2B5-44E4-B755-3B71A3FFB862}' />
    </window>
    <window class='worksheet' name='Tests/Cases (Country)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.1ezkvbd1x7q9fn17he4if15ah0ng].[none:location:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.1ezkvbd1x7q9fn17he4if15ah0ng].[none:continent:nk]</field>
            <field>[federated.1ezkvbd1x7q9fn17he4if15ah0ng].[none:location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B3987612-0AEC-4F92-9CDC-DA158F716D39}' />
    </window>
    <window class='worksheet' name='Cases/Deaths (Country - Month)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ezkvbd1x7q9fn17he4if15ah0ng].[mn:date:ok]</field>
            <field>[federated.1ezkvbd1x7q9fn17he4if15ah0ng].[none:location:nk]</field>
            <field>[federated.1ezkvbd1x7q9fn17he4if15ah0ng].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C517B9B0-2EBD-492D-9C13-A6459CFCF7BD}' />
    </window>
    <window class='worksheet' name='India'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='3' param='[federated.1ezkvbd1x7q9fn17he4if15ah0ng].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ezkvbd1x7q9fn17he4if15ah0ng].[none:hosp_patients:nk]</field>
            <field>[federated.1ezkvbd1x7q9fn17he4if15ah0ng].[none:location:nk]</field>
            <field>[federated.1ezkvbd1x7q9fn17he4if15ah0ng].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{DFBB65FC-807D-4F3F-997B-D218123F3F2D}' />
    </window>
    <window class='worksheet' name='Deaths/Medical-Condition'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.1ezkvbd1x7q9fn17he4if15ah0ng].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ezkvbd1x7q9fn17he4if15ah0ng].[none:hosp_patients:nk]</field>
            <field>[federated.1ezkvbd1x7q9fn17he4if15ah0ng].[none:location:nk]</field>
            <field>[federated.1ezkvbd1x7q9fn17he4if15ah0ng].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6696CC5D-209D-45EE-8B24-BAA85110B7B0}' />
    </window>
    <window class='worksheet' name='Reasons for Higher Deaths/Cases'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.1ezkvbd1x7q9fn17he4if15ah0ng].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ezkvbd1x7q9fn17he4if15ah0ng].[none:location:nk]</field>
            <field>[federated.1ezkvbd1x7q9fn17he4if15ah0ng].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{18783149-CD92-41FE-AAB4-8A3E5DE26C06}' />
    </window>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Cases/Deaths (Country - Month)'>
          <zoom type='fit-height' />
          <selection-collection>
            <node-selection select-tuples='false'>
              <oriented-node-reference orientation='horizontal'>
                <node-reference>
                  <axis>[federated.1ezkvbd1x7q9fn17he4if15ah0ng].[sum:total_deaths:qk]</axis>
                </node-reference>
                <page-reference />
              </oriented-node-reference>
            </node-selection>
          </selection-collection>
        </viewpoint>
        <viewpoint name='Tests/Cases (Country)'>
          <zoom type='entire-view' />
          <highlight field='[federated.1ezkvbd1x7q9fn17he4if15ah0ng].[none:location:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{E76CC77A-5844-4945-9AE8-BD3239318AA1}' />
    </window>
    <window class='dashboard' maximized='true' name='Story 1'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{FF72303D-0EAE-4A4E-AEB2-1ED4EFBA19F7}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Cases/Deaths (Country - Month)' width='192'>
      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
      OKjrCWpT8gAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      B+jt7aWhoQGPxwPA8PAwfr+fnp4euru7OXv2LC0tLdTU1HD27FlEUaSjo4PZ2Vm2b9/O3Nwc
      VVUrp5l8UiPA/ZicnKSuru6+aWiaxtTUVP76vUiSRDAY3NBvmQpOMCGvHfr9QegdAXZY9mG1
      Wpmbm2N6epqqqirGxsbo7u7G4/Fw48YNGhoamJubI5lMYrVaWVhY4ODBgxiNRi5evMjevXsZ
      GhqivLycqakpMpkMR44cuW/+BQ1gZOAWqtmLko1T768knFbwuR2k4mHuDI5SX+4janTQXOPH
      Zha5ceEDyjsO4SJJLC0hSzK11WVMzYWoLPeRSqVQlAyJaAaruwSTlgWLizKPi76P/jOx2ROb
      qsxlVs/vXKXtdBz8X/nBD37As88+S1tbG++//z4ej4fp6Wm6urq4fv06Ho+HWCzGq6++ysDA
      AOfPn6eqqoqGhgampqaYn5/nG9/4BlbrklPJqVOnkCQJh8NBZWUlFy5c4Fvf+la+DI+zAXzS
      aUyPXmaq9z9uKu315uKu0nZ2HP593n77bXbu3MnFixfp6uqira2Nq1ev0tTUhMFgoKenh1gs
      xuLiIs899xx1dXWcO3eO/fv3I8sy6XSajz76iP3793P69GleffVVzp49yzPPPHPf/At+rWB2
      gJQgq8HY5CxWAwwGFerqWigtLaXEYUKz+ZiZnKClsYpgyoA0OoDTZkbKZnE5nNy4fQstkyEY
      iVJfW0MoFEdVVWq9bsaG+glEpzlycD/pxAyh2a2dAimKgt/vZ2xsjLa2NqxWK16vl/n5eYaG
      hjCbzcRisbyK9tq1aywuLlJbW8vU1BS1tbU8++yzvP/++7zyyitMTU3h9/uRZZnLly/T3NyM
      3+/f0jJ/lpBy8S1/Zveyc+dSMN5vfvObvPfee/nFe1dXF4FAIP/8vv3tb/OLX/wi/3xMJhMm
      k4lr167hdruZm5vDbDaTSCRwOBwPbHwFI8Dc3ByVZSVcuj5ApddGNCVTXu7DX1XFYF8vLrsT
      m7+RdHAOsyZhLqslPLd0ioskSdhMJlJShlQqy+JihKeeepKpyUk0KYNmcZEMzZHVzOzbvYPA
      zB2MbOz403tZPayazC7cZR1cunQJq9WKqqp4PB7Gxsbo6Ojg1q1bbNu2jf7+fvx+P7lcLj9U
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='Deaths/Medical-Condition' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='India' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Reasons for Higher Deaths/Cases' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Story 1' width='192'>
      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
      5QzD4MSJE1gsFoaHh/mJn/gJU23Nzs5itVo5evQomUwmd/3XwmazUVRUlLt2ZuTTNI1AIEBN
      TQ2dnZ2mRx3bti2uNmazWaqqqkxfw8LCQnbu3Ek2m13dENY2coWa+qXlTDU+S2vXKLubtxOZ
      DaNJTtxW6B5NUlhUjMUikNQsCChbHhViaGiIT3ziE7z22msApurt6uqioaGB8vJyTp06RUXF
      apGul1BVlXQ6TSAQYHR0NHeB16OtrQ1FUTh+/DhdXV2mhjOKoqBpGjMzM5SUlJi+VpcvX95w
      WwDl5eXs2bOH9vZ2022NjIzQ0tJCa2srjz/+uKlykUiEoqIi3n33Xfbu3UtBQcG6ZTRN4623
      3qKuro75+XnT8nV0dPDkk08yNTVFf3+/KcVRFAWr1Upvby+pVGplBWisr+LVC2M4XZPA4oTY
      4i7mo08thkusKA2YEnCrOHbsGKdOnaK4uNj0xWlsbKS/v5+XXnqJn/u5nzNVxmKxoOs609PT
      PPfcc6ble/7555mbm8MwDKqrq02VkWWZmpoaCgsLCQTMX8/nnnuO1157jatXr3L48GFTZXRd
      p6+vj76+Pnw+n+m2Dh06xMWLF7Hb7ciyOcNhS0sLvb29VFRUmHr4YbHXeOGFF5BlmdHR9Y2v
      1zl+/Djnz5/H6XSaesEBuaF0ZWUlPT09K88BHIUVHDuwE7e30LQwd5JvfvObTE1Ncf78eXTd
      XEjCtrY2kskkn/vc53j33XdNlVFVlUwmQ1VVFWfOnDEt38WLF+no6ODChQv09/ebbuvFF1/k
      vffeY3Z21nRbJ06c4Nlnn6WyspLOzk5TZXRdp6ysjMbGRtO7c2Fx8aGpqYnx8XHT1/3y5cvU
      1dXR1tZGV9f6Ubevy/e9732Pc+fOcfbsWdPyXbp0iWQySTAYpKfHXMhERVGIRqOcPHkSAOk3
      fv3XfgvA7lpKUJeaH+Pb7/WzvaqQysr1rcErkc1msdlsmyp7M3v37kXTNLZt22Y6aK/H42F4
      eJjm5mZkWaawcH1lFkWR2dlZPB4PTU1NeL3mbBo+n4/S0lJ27NiBLMumyomiyBNPPMHMzAzH
      jh0zNb4GcLvdtLa2Eg6H2b9/v6lyuq7T2dnJoUOHchNbM1itVrq7uzl48CAej8eU8iwvU1BQ
      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
      sNuP407UAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Tests/Cases (Continent)' width='192'>
      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
      0hf1nl/6CgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Tests/Cases (Country)' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
