<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20211.21.0320.1853                               -->
<workbook original-version='18.1' source-build='2021.1.0 (20211.21.0320.1853)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <_.fcp.SetMembershipControl.true...SetMembershipControl />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='matches+' inline='true' name='federated.1m2egue0yuylqw16ddzap0sbhrp1' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='matches' name='textscan.1x2zb381c2oaco13yxgjj0ccwkou'>
            <connection class='textscan' directory='C:/Users/admin/OneDrive/Desktop/SPARKS/TASK 5 - IPL #Tableau/Indian Premier League' filename='matches.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1x2zb381c2oaco13yxgjj0ccwkou' name='deliveries.csv' table='[deliveries#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='integer' name='match_id' ordinal='0' />
            <column datatype='integer' name='inning' ordinal='1' />
            <column datatype='string' name='batting_team' ordinal='2' />
            <column datatype='string' name='bowling_team' ordinal='3' />
            <column datatype='integer' name='over' ordinal='4' />
            <column datatype='integer' name='ball' ordinal='5' />
            <column datatype='string' name='batsman' ordinal='6' />
            <column datatype='string' name='non_striker' ordinal='7' />
            <column datatype='string' name='bowler' ordinal='8' />
            <column datatype='integer' name='is_super_over' ordinal='9' />
            <column datatype='integer' name='wide_runs' ordinal='10' />
            <column datatype='integer' name='bye_runs' ordinal='11' />
            <column datatype='integer' name='legbye_runs' ordinal='12' />
            <column datatype='integer' name='noball_runs' ordinal='13' />
            <column datatype='integer' name='penalty_runs' ordinal='14' />
            <column datatype='integer' name='batsman_runs' ordinal='15' />
            <column datatype='integer' name='extra_runs' ordinal='16' />
            <column datatype='integer' name='total_runs' ordinal='17' />
            <column datatype='string' name='player_dismissed' ordinal='18' />
            <column datatype='string' name='dismissal_kind' ordinal='19' />
            <column datatype='string' name='fielder' ordinal='20' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='textscan.1x2zb381c2oaco13yxgjj0ccwkou' name='matches.csv' table='[matches#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
              <column datatype='integer' name='id' ordinal='0' />
              <column datatype='integer' name='season' ordinal='1' />
              <column datatype='string' name='city' ordinal='2' />
              <column datatype='date' name='date' ordinal='3' />
              <column datatype='string' name='team1' ordinal='4' />
              <column datatype='string' name='team2' ordinal='5' />
              <column datatype='string' name='toss_winner' ordinal='6' />
              <column datatype='string' name='toss_decision' ordinal='7' />
              <column datatype='string' name='result' ordinal='8' />
              <column datatype='integer' name='dl_applied' ordinal='9' />
              <column datatype='string' name='winner' ordinal='10' />
              <column datatype='integer' name='win_by_runs' ordinal='11' />
              <column datatype='integer' name='win_by_wickets' ordinal='12' />
              <column datatype='string' name='player_of_match' ordinal='13' />
              <column datatype='string' name='venue' ordinal='14' />
              <column datatype='string' name='umpire1' ordinal='15' />
              <column datatype='string' name='umpire2' ordinal='16' />
              <column datatype='string' name='umpire3' ordinal='17' />
            </columns>
          </relation>
          <relation connection='textscan.1x2zb381c2oaco13yxgjj0ccwkou' name='deliveries.csv' table='[deliveries#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
              <column datatype='integer' name='match_id' ordinal='0' />
              <column datatype='integer' name='inning' ordinal='1' />
              <column datatype='string' name='batting_team' ordinal='2' />
              <column datatype='string' name='bowling_team' ordinal='3' />
              <column datatype='integer' name='over' ordinal='4' />
              <column datatype='integer' name='ball' ordinal='5' />
              <column datatype='string' name='batsman' ordinal='6' />
              <column datatype='string' name='non_striker' ordinal='7' />
              <column datatype='string' name='bowler' ordinal='8' />
              <column datatype='integer' name='is_super_over' ordinal='9' />
              <column datatype='integer' name='wide_runs' ordinal='10' />
              <column datatype='integer' name='bye_runs' ordinal='11' />
              <column datatype='integer' name='legbye_runs' ordinal='12' />
              <column datatype='integer' name='noball_runs' ordinal='13' />
              <column datatype='integer' name='penalty_runs' ordinal='14' />
              <column datatype='integer' name='batsman_runs' ordinal='15' />
              <column datatype='integer' name='extra_runs' ordinal='16' />
              <column datatype='integer' name='total_runs' ordinal='17' />
              <column datatype='string' name='player_dismissed' ordinal='18' />
              <column datatype='string' name='dismissal_kind' ordinal='19' />
              <column datatype='string' name='fielder' ordinal='20' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;Rs&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;Rs&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[id]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>id</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[matches.csv_DD4ADFDDE8FF47B5BFA53E86D6B2DB68]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>season</remote-name>
            <remote-type>20</remote-type>
            <local-name>[season]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>season</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[matches.csv_DD4ADFDDE8FF47B5BFA53E86D6B2DB68]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>city</remote-name>
            <remote-type>129</remote-type>
            <local-name>[city]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>city</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[matches.csv_DD4ADFDDE8FF47B5BFA53E86D6B2DB68]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[matches.csv_DD4ADFDDE8FF47B5BFA53E86D6B2DB68]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>team1</remote-name>
            <remote-type>129</remote-type>
            <local-name>[team1]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>team1</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[matches.csv_DD4ADFDDE8FF47B5BFA53E86D6B2DB68]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>team2</remote-name>
            <remote-type>129</remote-type>
            <local-name>[team2]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>team2</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[matches.csv_DD4ADFDDE8FF47B5BFA53E86D6B2DB68]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>toss_winner</remote-name>
            <remote-type>129</remote-type>
            <local-name>[toss_winner]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>toss_winner</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[matches.csv_DD4ADFDDE8FF47B5BFA53E86D6B2DB68]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>toss_decision</remote-name>
            <remote-type>129</remote-type>
            <local-name>[toss_decision]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>toss_decision</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[matches.csv_DD4ADFDDE8FF47B5BFA53E86D6B2DB68]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>result</remote-name>
            <remote-type>129</remote-type>
            <local-name>[result]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>result</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[matches.csv_DD4ADFDDE8FF47B5BFA53E86D6B2DB68]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dl_applied</remote-name>
            <remote-type>20</remote-type>
            <local-name>[dl_applied]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>dl_applied</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[matches.csv_DD4ADFDDE8FF47B5BFA53E86D6B2DB68]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>winner</remote-name>
            <remote-type>129</remote-type>
            <local-name>[winner]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>winner</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[matches.csv_DD4ADFDDE8FF47B5BFA53E86D6B2DB68]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>win_by_runs</remote-name>
            <remote-type>20</remote-type>
            <local-name>[win_by_runs]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>win_by_runs</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[matches.csv_DD4ADFDDE8FF47B5BFA53E86D6B2DB68]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>win_by_wickets</remote-name>
            <remote-type>20</remote-type>
            <local-name>[win_by_wickets]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>win_by_wickets</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[matches.csv_DD4ADFDDE8FF47B5BFA53E86D6B2DB68]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>player_of_match</remote-name>
            <remote-type>129</remote-type>
            <local-name>[player_of_match]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>player_of_match</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[matches.csv_DD4ADFDDE8FF47B5BFA53E86D6B2DB68]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>venue</remote-name>
            <remote-type>129</remote-type>
            <local-name>[venue]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>venue</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[matches.csv_DD4ADFDDE8FF47B5BFA53E86D6B2DB68]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>umpire1</remote-name>
            <remote-type>129</remote-type>
            <local-name>[umpire1]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>umpire1</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[matches.csv_DD4ADFDDE8FF47B5BFA53E86D6B2DB68]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>umpire2</remote-name>
            <remote-type>129</remote-type>
            <local-name>[umpire2]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>umpire2</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[matches.csv_DD4ADFDDE8FF47B5BFA53E86D6B2DB68]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>umpire3</remote-name>
            <remote-type>129</remote-type>
            <local-name>[umpire3]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>umpire3</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[matches.csv_DD4ADFDDE8FF47B5BFA53E86D6B2DB68]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>match_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[match_id]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>match_id</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[deliveries.csv_DB24C2E3E25E462AB1F3BD614A571CD2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>inning</remote-name>
            <remote-type>20</remote-type>
            <local-name>[inning]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>inning</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[deliveries.csv_DB24C2E3E25E462AB1F3BD614A571CD2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>batting_team</remote-name>
            <remote-type>129</remote-type>
            <local-name>[batting_team]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>batting_team</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[deliveries.csv_DB24C2E3E25E462AB1F3BD614A571CD2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>bowling_team</remote-name>
            <remote-type>129</remote-type>
            <local-name>[bowling_team]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>bowling_team</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[deliveries.csv_DB24C2E3E25E462AB1F3BD614A571CD2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>over</remote-name>
            <remote-type>20</remote-type>
            <local-name>[over]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>over</remote-alias>
            <ordinal>22</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[deliveries.csv_DB24C2E3E25E462AB1F3BD614A571CD2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ball</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ball]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>ball</remote-alias>
            <ordinal>23</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[deliveries.csv_DB24C2E3E25E462AB1F3BD614A571CD2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>batsman</remote-name>
            <remote-type>129</remote-type>
            <local-name>[batsman]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>batsman</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[deliveries.csv_DB24C2E3E25E462AB1F3BD614A571CD2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>non_striker</remote-name>
            <remote-type>129</remote-type>
            <local-name>[non_striker]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>non_striker</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[deliveries.csv_DB24C2E3E25E462AB1F3BD614A571CD2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>bowler</remote-name>
            <remote-type>129</remote-type>
            <local-name>[bowler]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>bowler</remote-alias>
            <ordinal>26</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[deliveries.csv_DB24C2E3E25E462AB1F3BD614A571CD2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>is_super_over</remote-name>
            <remote-type>20</remote-type>
            <local-name>[is_super_over]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>is_super_over</remote-alias>
            <ordinal>27</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[deliveries.csv_DB24C2E3E25E462AB1F3BD614A571CD2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>wide_runs</remote-name>
            <remote-type>20</remote-type>
            <local-name>[wide_runs]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>wide_runs</remote-alias>
            <ordinal>28</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[deliveries.csv_DB24C2E3E25E462AB1F3BD614A571CD2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>bye_runs</remote-name>
            <remote-type>20</remote-type>
            <local-name>[bye_runs]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>bye_runs</remote-alias>
            <ordinal>29</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[deliveries.csv_DB24C2E3E25E462AB1F3BD614A571CD2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>legbye_runs</remote-name>
            <remote-type>20</remote-type>
            <local-name>[legbye_runs]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>legbye_runs</remote-alias>
            <ordinal>30</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[deliveries.csv_DB24C2E3E25E462AB1F3BD614A571CD2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>noball_runs</remote-name>
            <remote-type>20</remote-type>
            <local-name>[noball_runs]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>noball_runs</remote-alias>
            <ordinal>31</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[deliveries.csv_DB24C2E3E25E462AB1F3BD614A571CD2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>penalty_runs</remote-name>
            <remote-type>20</remote-type>
            <local-name>[penalty_runs]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>penalty_runs</remote-alias>
            <ordinal>32</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[deliveries.csv_DB24C2E3E25E462AB1F3BD614A571CD2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>batsman_runs</remote-name>
            <remote-type>20</remote-type>
            <local-name>[batsman_runs]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>batsman_runs</remote-alias>
            <ordinal>33</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[deliveries.csv_DB24C2E3E25E462AB1F3BD614A571CD2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>extra_runs</remote-name>
            <remote-type>20</remote-type>
            <local-name>[extra_runs]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>extra_runs</remote-alias>
            <ordinal>34</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[deliveries.csv_DB24C2E3E25E462AB1F3BD614A571CD2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_runs</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_runs]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>total_runs</remote-alias>
            <ordinal>35</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[deliveries.csv_DB24C2E3E25E462AB1F3BD614A571CD2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>player_dismissed</remote-name>
            <remote-type>129</remote-type>
            <local-name>[player_dismissed]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>player_dismissed</remote-alias>
            <ordinal>36</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[deliveries.csv_DB24C2E3E25E462AB1F3BD614A571CD2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dismissal_kind</remote-name>
            <remote-type>129</remote-type>
            <local-name>[dismissal_kind]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>dismissal_kind</remote-alias>
            <ordinal>37</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[deliveries.csv_DB24C2E3E25E462AB1F3BD614A571CD2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>fielder</remote-name>
            <remote-type>129</remote-type>
            <local-name>[fielder]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>fielder</remote-alias>
            <ordinal>38</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[deliveries.csv_DB24C2E3E25E462AB1F3BD614A571CD2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='deliveries.csv' datatype='table' name='[__tableau_internal_object_id__].[deliveries.csv_DB24C2E3E25E462AB1F3BD614A571CD2]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='matches.csv' datatype='table' name='[__tableau_internal_object_id__].[matches.csv_DD4ADFDDE8FF47B5BFA53E86D6B2DB68]' role='measure' type='quantitative' />
      <column caption='Ball' datatype='integer' name='[ball]' role='measure' type='quantitative' />
      <column caption='Batsman' datatype='string' name='[batsman]' role='dimension' type='nominal' />
      <column caption='Batsman Runs' datatype='integer' name='[batsman_runs]' role='measure' type='quantitative' />
      <column caption='Batting Team' datatype='string' name='[batting_team]' role='dimension' type='nominal' />
      <column caption='Bowler' datatype='string' name='[bowler]' role='dimension' type='nominal' />
      <column caption='Bowling Team' datatype='string' name='[bowling_team]' role='dimension' type='nominal' />
      <column caption='Bye Runs' datatype='integer' name='[bye_runs]' role='measure' type='quantitative' />
      <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
        <semantic-values semantic-role='[City].[Name]'>
          <semantic-value key='&quot;Ahmedabad&quot;' value='&quot;Ahmadabad&quot;' />
          <semantic-value key='&quot;Bangalore&quot;' value='&quot;Bengaluru&quot;' />
          <semantic-value key='&quot;Dharamsala&quot;' value='&quot;Palampur&quot;' />
          <semantic-value key='&quot;Kochi&quot;' value='&quot;Cochin&quot;' />
          <semantic-value key='&quot;Mohali&quot;' value='&quot;Mohari&quot;' />
          <semantic-value key='&quot;Visakhapatnam&quot;' value='&quot;Vishakhapatnam&quot;' />
        </semantic-values>
        <semantic-values semantic-role='[Geographical].[Latitude]'>
          <semantic-value key='&quot;Delhi&quot;' value='28.359999999999999' />
          <semantic-value key='&quot;Hyderabad&quot;' value='17.361699999999999' />
          <semantic-value key='&quot;Indore&quot;' value='22.43' />
          <semantic-value key='&quot;Johannesburg&quot;' value='26.120000000000001' />
          <semantic-value key='&quot;Kimberley&quot;' value='28.742000000000001' />
          <semantic-value key='&quot;Raipur&quot;' value='21.25' />
        </semantic-values>
        <semantic-values semantic-role='[Geographical].[Longitude]'>
          <semantic-value key='&quot;Delhi&quot;' value='77.129999999999995' />
          <semantic-value key='&quot;Hyderabad&quot;' value='78.475099999999998' />
          <semantic-value key='&quot;Indore&quot;' value='75.5' />
          <semantic-value key='&quot;Johannesburg&quot;' value='28.199999999999999' />
          <semantic-value key='&quot;Kimberley&quot;' value='24.771999999999998' />
          <semantic-value key='&quot;Raipur&quot;' value='81.629999999999995' />
        </semantic-values>
      </column>
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Dismissal Kind' datatype='string' name='[dismissal_kind]' role='dimension' type='nominal' />
      <column caption='Dl Applied' datatype='integer' name='[dl_applied]' role='measure' type='quantitative' />
      <column caption='Extra Runs' datatype='integer' name='[extra_runs]' role='measure' type='quantitative' />
      <column caption='Fielder' datatype='string' name='[fielder]' role='dimension' type='nominal' />
      <column caption='Id' datatype='integer' name='[id]' role='dimension' type='ordinal' />
      <column caption='Inning' datatype='integer' name='[inning]' role='measure' type='quantitative' />
      <column caption='Is Super Over' datatype='integer' name='[is_super_over]' role='measure' type='quantitative' />
      <column caption='Legbye Runs' datatype='integer' name='[legbye_runs]' role='measure' type='quantitative' />
      <column caption='Match Id' datatype='integer' name='[match_id]' role='dimension' type='ordinal' />
      <column caption='Noball Runs' datatype='integer' name='[noball_runs]' role='measure' type='quantitative' />
      <column caption='Non Striker' datatype='string' name='[non_striker]' role='dimension' type='nominal' />
      <column caption='Over' datatype='integer' name='[over]' role='measure' type='quantitative' />
      <column caption='Penalty Runs' datatype='integer' name='[penalty_runs]' role='measure' type='quantitative' />
      <column caption='Player Dismissed' datatype='string' name='[player_dismissed]' role='dimension' type='nominal' />
      <column caption='Player Of Match' datatype='string' name='[player_of_match]' role='dimension' type='nominal' />
      <column caption='Result' datatype='string' name='[result]' role='dimension' type='nominal' />
      <column caption='Season' datatype='integer' name='[season]' role='measure' type='quantitative' />
      <column caption='Team1' datatype='string' name='[team1]' role='dimension' type='nominal' />
      <column caption='Team2' datatype='string' name='[team2]' role='dimension' type='nominal' />
      <column caption='Toss Decision' datatype='string' name='[toss_decision]' role='dimension' type='nominal' />
      <column caption='Toss Winner' datatype='string' name='[toss_winner]' role='dimension' type='nominal' />
      <column caption='Total Runs' datatype='integer' name='[total_runs]' role='measure' type='quantitative' />
      <column caption='Umpire1' datatype='string' name='[umpire1]' role='dimension' type='nominal' />
      <column caption='Umpire2' datatype='string' name='[umpire2]' role='dimension' type='nominal' />
      <column caption='Umpire3' datatype='string' name='[umpire3]' role='dimension' type='nominal' />
      <column caption='Venue' datatype='string' name='[venue]' role='dimension' type='nominal' />
      <column caption='Wide Runs' datatype='integer' name='[wide_runs]' role='measure' type='quantitative' />
      <column caption='Win By Runs' datatype='integer' name='[win_by_runs]' role='measure' type='quantitative' />
      <column caption='Win By Wickets' datatype='integer' name='[win_by_wickets]' role='measure' type='quantitative' />
      <column caption='Winner' datatype='string' name='[winner]' role='dimension' type='nominal' />
      <column-instance column='[city]' derivation='Max' name='[max:city:nk]' pivot='key' type='nominal' />
      <column-instance column='[batsman]' derivation='None' name='[none:batsman:nk]' pivot='key' type='nominal' />
      <column-instance column='[city]' derivation='None' name='[none:city:nk]' pivot='key' type='nominal' />
      <column-instance column='[winner]' derivation='None' name='[none:winner:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[max:city:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Chandigarh&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Raipur&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Kimberley&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bengaluru&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mumbai&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Dharamsala&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Visakhapatnam&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Chennai&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Rajkot&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bloemfontein&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nagpur&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Johannesburg&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Abu Dhabi&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Kochi&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Indore&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cape Town&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Port Elizabeth&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Durban&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;East London&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Jaipur&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kanpur&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cuttack&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ranchi&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Centurion&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Pune&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ahmedabad&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Kolkata&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Hyderabad&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Delhi&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sharjah&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bangalore&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mohali&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:city:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Chandigarh&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Raipur&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Kimberley&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bengaluru&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mumbai&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Dharamsala&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Visakhapatnam&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Chennai&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Rajkot&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bloemfontein&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nagpur&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Johannesburg&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Abu Dhabi&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Kochi&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Indore&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cape Town&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Port Elizabeth&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Durban&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;East London&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Jaipur&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kanpur&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cuttack&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ranchi&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Centurion&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Pune&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ahmedabad&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Kolkata&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Hyderabad&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Delhi&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sharjah&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bangalore&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mohali&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:winner:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Mumbai Indians&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chennai Super Kings&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Gujarat Lions&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Rising Pune Supergiants&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Pune Warriors&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kings XI Punjab&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Deccan Chargers&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kochi Tuskers Kerala&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Royal Challengers Bangalore&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sunrisers Hyderabad&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Rajasthan Royals&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kolkata Knight Riders&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Delhi Capitals&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>%null%</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Rising Pune Supergiant&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Delhi Daredevils&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:batsman:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;A Kumble&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;AC Blizzard&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ankit Soni&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;B Sumanth&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;C Nanda&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;D Shorey&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;DM Bravo&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;GB Hogg&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;HV Patel&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;JA Morkel&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;K Goel&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;KA Pollard&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;M Ali&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;MA Starc&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;MN Samuels&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;ND Doshi&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;P Shaw&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;R Dhawan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;RR Bhatkal&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;S Badree&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;S Singh&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;SE Bond&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;SP Fleming&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;T Kohli&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;WP Saha&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;YA Abdulla&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;A Ashish Reddy&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;AA Jhunjhunwala&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;AB de Villiers&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Avesh Khan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;BJ Hodge&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;CL White&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;DJ Hooda&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;E Lewis&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;H Vihari&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;J Bairstow&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;JJ van der Wath&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;KC Sangakkara&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;LA Carseldine&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;M Rawat&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;MJ Guptill&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;MS Gony&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;P Dogra&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;PR Shah&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;R Vinay Kumar&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;RS Bopara&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;S Lamichhane&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;SB Bangar&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;SL Malinga&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;SR Watson&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;U Kaul&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Washington Sundar&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;A Dananjaya&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;AJ Tye&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;AN Ahmed&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;B Kumar&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;C de Grandhomme&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;CH Gayle&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;DJ Thornely&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;F du Plessis&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Harpreet Singh&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;J Suchith&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;JP Duminy&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;KK Cooper&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;LMP Simmons&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;M Vohra&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;MK Tiwary&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;N Naik&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;P Parameswaran&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;R Ashwin&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;RD Chahar&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;RV Gomez&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;S Rana&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;SB Wagh&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;SMSM Senanayake&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;SW Tait&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;UT Khawaja&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;X Thalaivan Sargunam&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Yuvraj Singh&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;A Nehra&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;AD Mascarenhas&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;AP Tare&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;BAW Mendis&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;CRD Fernando&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;DJG Sammy&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;DPMD Jayawardene&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;GJ Bailey&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;IC Pandey&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;JD Unadkat&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;K Upadhyay&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kuldeep Yadav&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;M Kartik&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;MC Juneja&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mohammad Hafeez&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;MS Dhoni&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Parvez Rasool&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;R Parag&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;RN ten Doeschate&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;S Hetmyer&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;S Tyagi&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Shivam Sharma&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;SPD Smith&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;TD Paine&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;VR Aaron&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;YS Chahal&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;A Mishra&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;AC Gilchrist&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Anureet Singh&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;BA Bhatt&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;CA Ingram&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;D Short&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;DNT Zoysa&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;GC Smith&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;I Malhotra&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jaskaran Singh&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;K Gowtham&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;KD Karthik&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;M Ashwin&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mandeep Singh&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;MN van Wyk&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Niraj Patel&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;PC Valthaty&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;R Dravid&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;RJ Harris&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;S Badrinath&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;S Sohal&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;SK Trivedi&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;SP Goswami&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;T Taibu&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;V Shankar&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Yashpal Singh&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;A Flintoff&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;AB Dinda&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;AN Ghosh&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;B Laughlin&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;C Ingram&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;D du Preez&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;DA Warner&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;FH Edwards&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;HH Gibbs&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;J Syed Mohammad&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;JP Faulkner&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;KK Nair&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;LPC Silva&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;M Wood&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;ML Hayden&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;N Pooran&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;P R Barman&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;R Bhatia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;RE Levi&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;S Gopal&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;S Randiv&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;SC Ganguly&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;SN Khan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Swapnil Singh&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;UT Yadav&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Y Gnaneswara Rao&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;AA Bilakhia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;AG Paunikar&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;B Akhil&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bipul Sharma&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;CK Kapugedera&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;DJ Bravo&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;DT Patil&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;H Gurney&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;J Archer&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;JJ Bumrah&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;KB Arun Karthik&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;L Plunkett&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;M Muralitharan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Misbah-ul-Haq&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;MS Bisla&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;P Awana&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;PP Chawla&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;R Singh&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;RR Rossouw&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;S Kaushik&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Salman Butt&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;SK Raina&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;ST Jayasuriya&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;TR Birt&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;W Jaffer&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;A Chandila&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;AA Noffke&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;AL Menaria&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;AM Rahane&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;BJ Rohrer&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;CM Gautam&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;DJ Hussey&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;EJG Morgan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;H Viljoen&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;J Botha&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;JM Kemp&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;KP Appanna&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;LA Pomersbach&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;M Santner&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;MJ Lumb&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;MS Wade&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;P Krishna&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;PSP Handscomb&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;RA Jadeja&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;RS Gavaskar&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;S Mavi&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;SB Jakati&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;SM Harwood&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sunny Singh&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;UA Birla&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;V Kohli&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;A Uniyal&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;AF Milne&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;AS Raut&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;BCJ Cutting&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;CJ Jordan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;DE Bollinger&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;DS Lehmann&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;H Brar&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;IR Jaggi&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;JEC Franklin&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kamran Khan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;L Balaji&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;M Markande&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;MF Maharoof&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;MP Stoinis&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;NV Ojha&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;PJ Sangwan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;R Sharma&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;RR Powar&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;S Dhawan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;SA Yadav&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;SJ Srivastava&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;SS Shaikh&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;TM Head&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;VVS Laxman&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;A Hales&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;AB McDonald&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Anirudh Singh&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;B Lee&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;C Madan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;D Kalyankrishna&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;DL Chahar&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;FY Fazal&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;G Gambhir&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;J Theron&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;JR Hopes&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;KL Rahul&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;LR Shukla&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;MA Agarwal&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;MM Patel&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;N Rana&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;P Raj&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;R Bhui&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;RE van der Merwe&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;S Anirudha&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;S Rutherford&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;SD Chitnis&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;SN Thakur&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;T Curran&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;WD Parnell&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Y Nagar&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;A Singh&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;AD Mathews&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;AR Bawne&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;BR Dunk&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;CH Morris&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;DAJ Bracewell&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;DR Martyn&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;GJ Maxwell&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;IK Pathan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;JDP Oram&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;KMDN Kulasekara&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;KV Sharma&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;M Klinger&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;MD Mishra&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mohammad Nabi&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;NLTC Perera&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;PA Patel&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;R Rampaul&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;RP Singh&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;S Dube&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;S Vidyut&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Shoaib Ahmed&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;STR Binny&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;TG Southee&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;VRV Singh&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;A Symonds&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;AD Nath&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;AR Patel&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;BB Samantray&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;CJ Anderson&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;DB Das&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;DR Smith&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;GR Napier&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Imran Tahir&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;JDS Neesham&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;KAJ Roach&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;KW Richardson&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;M Lomror&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;MDKJ Perera&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mohammed Shami&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;NM Coulter-Nile&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;PD Collingwood&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;R Salam&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;RG Sharma&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;S Gill&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;SA Abbott&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Shoaib Akhtar&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sunny Gupta&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;TL Suman&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;VS Malik&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;YV Takawale&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;A Zampa&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;AG Murtaza&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;AS Yadav&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;BE Hendricks&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;CJ McKay&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;DH Yagnik&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;DT Christian&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;H Das&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ishan Kishan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;K Ahmed&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Karanveer Singh&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;L Livingstone&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;M Morkel&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;MG Johnson&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;MR Marsh&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;OA Shah&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;PM Sarvesh Kumar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;R Shukla&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;RR Raje&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;S Kaul&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sachin Baby&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;SE Marsh&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;SS Tiwary&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;TM Srivastava&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;VY Mahesh&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;AA Chavan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;AJ Finch&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;AUK Pathan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;BJ Haddin&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;CK Langeveldt&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;DJ Harris&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;DW Steyn&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;H Klaasen&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;J Arunkumar&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;JJ Roy&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;KC Cariappa&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;L Ronchi&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;M Ntini&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;MJ Clarke&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;NL McCullum&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;P Chopra&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;PP Ojha&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;R Tewatia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;RR Sarwan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;S Ladda&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sandeep Sharma&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;SK Warne&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;SR Tendulkar&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;TS Mills&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;WA Mota&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;A Mithun&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;AC Thomas&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;AP Dole&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;BA Stokes&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;CA Lynn&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;D Wiese&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;DP Nannes&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;GD McGrath&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;I Sharma&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;JC Buttler&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;K Paul&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;KP Pietersen&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;M de Lange&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;M Vijay&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mohammad Ashraful&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;NJ Maddinson&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;PA Reddy&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;R McLaren&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;RJ Peterson&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;S Chanderpaul&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;S Sreesanth&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Shahid Afridi&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;SP Jackson&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;T Thushara&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;VH Zol&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;A Joseph&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Abdur Razzak&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ankit Sharma&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;B Stanlake&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;C Munro&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;D Salunkhe&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;DL Vettori&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;HH Pandya&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;HM Amla&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;J Yadav&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;JH Kallis&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;KM Jadhav&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;LRPL Taylor&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;MA Khote&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;MM Sharma&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;N Saini&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;P Sahu&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;R Bishnoi&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;RG More&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;S Aravind&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;S Sharma&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;SD Lad&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sohail Tanvir&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;T Henderson&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;V Pratap Singh&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Y Venugopal Rao&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;A Chopra&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;AB Agarkar&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;AM Nayar&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;AT Rayudu&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;BMAJ Mendis&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;CR Brathwaite&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;DJ Jacobs&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;ER Dwivedi&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Harbhajan Singh&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;J Denly&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;JO Holder&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;KH Pandya&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;LH Ferguson&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;M Ur Rahman&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;MJ McClenaghan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mustafizur Rahman&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;P Kumar&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;PV Tambe&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;RA Tripathi&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;RS Sodhi&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;S Nadeem&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;SB Joshi&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;SM Katich&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;SV Samson&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;UBT Chand&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;V Sehwag&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;A Turner&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;AD Russell&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;AS Rajpoot&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;BB Sran&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;CJ Ferguson&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;DB Ravi Teja&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;DS Kulkarni&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Gurkeerat Singh&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Iqbal Abdulla&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;JE Taylor&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kamran Akmal&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;L Ablish&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;M Manhas&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;MEK Hussey&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mohammed Siraj&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;NS Naik&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;PJ Cummins&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;R Sathish&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;RR Pant&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;RV Uthappa&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;SA Asnodkar&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Shoaib Malik&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;SS Iyer&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;TM Dilshan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;VS Yeligati&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Z Khan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;A Mukund&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;AC Voges&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;AP Majumdar&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Basil Thampi&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;CA Pujara&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;DA Miller&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;DP Vijaykumar&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;GH Vihari&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;I Sodhi&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;JD Ryder&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;K Rabada&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;KS Williamson&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;M Kaif&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;MC Henriques&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;MK Pandey&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;NJ Rimmington&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Pankaj Singh&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;R Ninan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;RJ Quiney&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;S Curran&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;S Sriram&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Shakib Al Hasan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;SP Narine&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;TA Boult&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Vishnu Vinod&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Younis Khan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;A Choudhary&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;AB Barath&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Azhar Mahmood&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;B Chipli&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;BB McCullum&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;CR Woakes&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;DJ Muthuswami&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;F Behardien&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Harmeet Singh&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;J Searles&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Joginder Sharma&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;KJ Abbott&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;LJ Wright&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mashrafe Mortaza&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mohammad Asif&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;MV Boucher&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;P Negi&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Q de Kock&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Rashid Khan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;RT Ponting&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;S Narwal&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;SB Styris&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;SM Pollock&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;SW Billings&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Umar Gul&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;WPUJC Vaas&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;YK Pathan&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[City].[Name]' value='%null%' />
        <semantic-value key='[Country].[Name]' value='%null%' />
        <semantic-value key='[State].[Name]' value='%null%' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='deliveries.csv' id='deliveries.csv_DB24C2E3E25E462AB1F3BD614A571CD2'>
            <properties context=''>
              <relation connection='textscan.1x2zb381c2oaco13yxgjj0ccwkou' name='deliveries.csv' table='[deliveries#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='integer' name='match_id' ordinal='0' />
                  <column datatype='integer' name='inning' ordinal='1' />
                  <column datatype='string' name='batting_team' ordinal='2' />
                  <column datatype='string' name='bowling_team' ordinal='3' />
                  <column datatype='integer' name='over' ordinal='4' />
                  <column datatype='integer' name='ball' ordinal='5' />
                  <column datatype='string' name='batsman' ordinal='6' />
                  <column datatype='string' name='non_striker' ordinal='7' />
                  <column datatype='string' name='bowler' ordinal='8' />
                  <column datatype='integer' name='is_super_over' ordinal='9' />
                  <column datatype='integer' name='wide_runs' ordinal='10' />
                  <column datatype='integer' name='bye_runs' ordinal='11' />
                  <column datatype='integer' name='legbye_runs' ordinal='12' />
                  <column datatype='integer' name='noball_runs' ordinal='13' />
                  <column datatype='integer' name='penalty_runs' ordinal='14' />
                  <column datatype='integer' name='batsman_runs' ordinal='15' />
                  <column datatype='integer' name='extra_runs' ordinal='16' />
                  <column datatype='integer' name='total_runs' ordinal='17' />
                  <column datatype='string' name='player_dismissed' ordinal='18' />
                  <column datatype='string' name='dismissal_kind' ordinal='19' />
                  <column datatype='string' name='fielder' ordinal='20' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='matches.csv' id='matches.csv_DD4ADFDDE8FF47B5BFA53E86D6B2DB68'>
            <properties context=''>
              <relation connection='textscan.1x2zb381c2oaco13yxgjj0ccwkou' name='matches.csv' table='[matches#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='integer' name='id' ordinal='0' />
                  <column datatype='integer' name='season' ordinal='1' />
                  <column datatype='string' name='city' ordinal='2' />
                  <column datatype='date' name='date' ordinal='3' />
                  <column datatype='string' name='team1' ordinal='4' />
                  <column datatype='string' name='team2' ordinal='5' />
                  <column datatype='string' name='toss_winner' ordinal='6' />
                  <column datatype='string' name='toss_decision' ordinal='7' />
                  <column datatype='string' name='result' ordinal='8' />
                  <column datatype='integer' name='dl_applied' ordinal='9' />
                  <column datatype='string' name='winner' ordinal='10' />
                  <column datatype='integer' name='win_by_runs' ordinal='11' />
                  <column datatype='integer' name='win_by_wickets' ordinal='12' />
                  <column datatype='string' name='player_of_match' ordinal='13' />
                  <column datatype='string' name='venue' ordinal='14' />
                  <column datatype='string' name='umpire1' ordinal='15' />
                  <column datatype='string' name='umpire2' ordinal='16' />
                  <column datatype='string' name='umpire3' ordinal='17' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[id]' />
              <expression op='[match_id]' />
            </expression>
            <first-end-point object-id='matches.csv_DD4ADFDDE8FF47B5BFA53E86D6B2DB68' />
            <second-end-point object-id='deliveries.csv_DB24C2E3E25E462AB1F3BD614A571CD2' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='owid-covid-data' inline='true' name='federated.0rdbrgl1gvzsmk16wl211087vflk' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='owid-covid-data' name='textscan.0ftzw0c1mbv83213vrhuv1h45hva'>
            <connection class='textscan' directory='C:/Users/admin/OneDrive/Desktop/SPARKS/TASK 8 - COVID #Tableau' filename='owid-covid-data.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0ftzw0c1mbv83213vrhuv1h45hva' name='owid-covid-data.csv' table='[owid-covid-data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='string' name='iso_code' ordinal='0' />
            <column datatype='string' name='continent' ordinal='1' />
            <column datatype='string' name='location' ordinal='2' />
            <column datatype='date' name='date' ordinal='3' />
            <column datatype='real' name='total_cases' ordinal='4' />
            <column datatype='real' name='new_cases' ordinal='5' />
            <column datatype='real' name='new_cases_smoothed' ordinal='6' />
            <column datatype='real' name='total_deaths' ordinal='7' />
            <column datatype='real' name='new_deaths' ordinal='8' />
            <column datatype='real' name='new_deaths_smoothed' ordinal='9' />
            <column datatype='real' name='total_cases_per_million' ordinal='10' />
            <column datatype='real' name='new_cases_per_million' ordinal='11' />
            <column datatype='real' name='new_cases_smoothed_per_million' ordinal='12' />
            <column datatype='real' name='total_deaths_per_million' ordinal='13' />
            <column datatype='real' name='new_deaths_per_million' ordinal='14' />
            <column datatype='real' name='new_deaths_smoothed_per_million' ordinal='15' />
            <column datatype='real' name='reproduction_rate' ordinal='16' />
            <column datatype='string' name='icu_patients' ordinal='17' />
            <column datatype='string' name='icu_patients_per_million' ordinal='18' />
            <column datatype='string' name='hosp_patients' ordinal='19' />
            <column datatype='string' name='hosp_patients_per_million' ordinal='20' />
            <column datatype='string' name='weekly_icu_admissions' ordinal='21' />
            <column datatype='string' name='weekly_icu_admissions_per_million' ordinal='22' />
            <column datatype='string' name='weekly_hosp_admissions' ordinal='23' />
            <column datatype='string' name='weekly_hosp_admissions_per_million' ordinal='24' />
            <column datatype='real' name='new_tests' ordinal='25' />
            <column datatype='real' name='total_tests' ordinal='26' />
            <column datatype='real' name='total_tests_per_thousand' ordinal='27' />
            <column datatype='real' name='new_tests_per_thousand' ordinal='28' />
            <column datatype='real' name='new_tests_smoothed' ordinal='29' />
            <column datatype='real' name='new_tests_smoothed_per_thousand' ordinal='30' />
            <column datatype='real' name='positive_rate' ordinal='31' />
            <column datatype='real' name='tests_per_case' ordinal='32' />
            <column datatype='string' name='tests_units' ordinal='33' />
            <column datatype='real' name='total_vaccinations' ordinal='34' />
            <column datatype='real' name='people_vaccinated' ordinal='35' />
            <column datatype='real' name='people_fully_vaccinated' ordinal='36' />
            <column datatype='real' name='new_vaccinations' ordinal='37' />
            <column datatype='real' name='new_vaccinations_smoothed' ordinal='38' />
            <column datatype='real' name='total_vaccinations_per_hundred' ordinal='39' />
            <column datatype='real' name='people_vaccinated_per_hundred' ordinal='40' />
            <column datatype='real' name='people_fully_vaccinated_per_hundred' ordinal='41' />
            <column datatype='real' name='new_vaccinations_smoothed_per_million' ordinal='42' />
            <column datatype='real' name='stringency_index' ordinal='43' />
            <column datatype='real' name='population' ordinal='44' />
            <column datatype='real' name='population_density' ordinal='45' />
            <column datatype='real' name='median_age' ordinal='46' />
            <column datatype='real' name='aged_65_older' ordinal='47' />
            <column datatype='real' name='aged_70_older' ordinal='48' />
            <column datatype='real' name='gdp_per_capita' ordinal='49' />
            <column datatype='real' name='extreme_poverty' ordinal='50' />
            <column datatype='real' name='cardiovasc_death_rate' ordinal='51' />
            <column datatype='real' name='diabetes_prevalence' ordinal='52' />
            <column datatype='real' name='female_smokers' ordinal='53' />
            <column datatype='real' name='male_smokers' ordinal='54' />
            <column datatype='real' name='handwashing_facilities' ordinal='55' />
            <column datatype='real' name='hospital_beds_per_thousand' ordinal='56' />
            <column datatype='real' name='life_expectancy' ordinal='57' />
            <column datatype='real' name='human_development_index' ordinal='58' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.0ftzw0c1mbv83213vrhuv1h45hva' name='owid-covid-data.csv' table='[owid-covid-data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='string' name='iso_code' ordinal='0' />
            <column datatype='string' name='continent' ordinal='1' />
            <column datatype='string' name='location' ordinal='2' />
            <column datatype='date' name='date' ordinal='3' />
            <column datatype='real' name='total_cases' ordinal='4' />
            <column datatype='real' name='new_cases' ordinal='5' />
            <column datatype='real' name='new_cases_smoothed' ordinal='6' />
            <column datatype='real' name='total_deaths' ordinal='7' />
            <column datatype='real' name='new_deaths' ordinal='8' />
            <column datatype='real' name='new_deaths_smoothed' ordinal='9' />
            <column datatype='real' name='total_cases_per_million' ordinal='10' />
            <column datatype='real' name='new_cases_per_million' ordinal='11' />
            <column datatype='real' name='new_cases_smoothed_per_million' ordinal='12' />
            <column datatype='real' name='total_deaths_per_million' ordinal='13' />
            <column datatype='real' name='new_deaths_per_million' ordinal='14' />
            <column datatype='real' name='new_deaths_smoothed_per_million' ordinal='15' />
            <column datatype='real' name='reproduction_rate' ordinal='16' />
            <column datatype='string' name='icu_patients' ordinal='17' />
            <column datatype='string' name='icu_patients_per_million' ordinal='18' />
            <column datatype='string' name='hosp_patients' ordinal='19' />
            <column datatype='string' name='hosp_patients_per_million' ordinal='20' />
            <column datatype='string' name='weekly_icu_admissions' ordinal='21' />
            <column datatype='string' name='weekly_icu_admissions_per_million' ordinal='22' />
            <column datatype='string' name='weekly_hosp_admissions' ordinal='23' />
            <column datatype='string' name='weekly_hosp_admissions_per_million' ordinal='24' />
            <column datatype='real' name='new_tests' ordinal='25' />
            <column datatype='real' name='total_tests' ordinal='26' />
            <column datatype='real' name='total_tests_per_thousand' ordinal='27' />
            <column datatype='real' name='new_tests_per_thousand' ordinal='28' />
            <column datatype='real' name='new_tests_smoothed' ordinal='29' />
            <column datatype='real' name='new_tests_smoothed_per_thousand' ordinal='30' />
            <column datatype='real' name='positive_rate' ordinal='31' />
            <column datatype='real' name='tests_per_case' ordinal='32' />
            <column datatype='string' name='tests_units' ordinal='33' />
            <column datatype='real' name='total_vaccinations' ordinal='34' />
            <column datatype='real' name='people_vaccinated' ordinal='35' />
            <column datatype='real' name='people_fully_vaccinated' ordinal='36' />
            <column datatype='real' name='new_vaccinations' ordinal='37' />
            <column datatype='real' name='new_vaccinations_smoothed' ordinal='38' />
            <column datatype='real' name='total_vaccinations_per_hundred' ordinal='39' />
            <column datatype='real' name='people_vaccinated_per_hundred' ordinal='40' />
            <column datatype='real' name='people_fully_vaccinated_per_hundred' ordinal='41' />
            <column datatype='real' name='new_vaccinations_smoothed_per_million' ordinal='42' />
            <column datatype='real' name='stringency_index' ordinal='43' />
            <column datatype='real' name='population' ordinal='44' />
            <column datatype='real' name='population_density' ordinal='45' />
            <column datatype='real' name='median_age' ordinal='46' />
            <column datatype='real' name='aged_65_older' ordinal='47' />
            <column datatype='real' name='aged_70_older' ordinal='48' />
            <column datatype='real' name='gdp_per_capita' ordinal='49' />
            <column datatype='real' name='extreme_poverty' ordinal='50' />
            <column datatype='real' name='cardiovasc_death_rate' ordinal='51' />
            <column datatype='real' name='diabetes_prevalence' ordinal='52' />
            <column datatype='real' name='female_smokers' ordinal='53' />
            <column datatype='real' name='male_smokers' ordinal='54' />
            <column datatype='real' name='handwashing_facilities' ordinal='55' />
            <column datatype='real' name='hospital_beds_per_thousand' ordinal='56' />
            <column datatype='real' name='life_expectancy' ordinal='57' />
            <column datatype='real' name='human_development_index' ordinal='58' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;Rs&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>iso_code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[iso_code]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>iso_code</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_4BCA49D775274FBFB0F6107E5EAE8DC0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>continent</remote-name>
            <remote-type>129</remote-type>
            <local-name>[continent]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>continent</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_4BCA49D775274FBFB0F6107E5EAE8DC0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>129</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_4BCA49D775274FBFB0F6107E5EAE8DC0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_4BCA49D775274FBFB0F6107E5EAE8DC0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_cases]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>total_cases</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_4BCA49D775274FBFB0F6107E5EAE8DC0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_cases]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>new_cases</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_4BCA49D775274FBFB0F6107E5EAE8DC0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases_smoothed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_cases_smoothed]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>new_cases_smoothed</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_4BCA49D775274FBFB0F6107E5EAE8DC0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_deaths]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>total_deaths</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_4BCA49D775274FBFB0F6107E5EAE8DC0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_deaths]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>new_deaths</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_4BCA49D775274FBFB0F6107E5EAE8DC0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths_smoothed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_deaths_smoothed]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>new_deaths_smoothed</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_4BCA49D775274FBFB0F6107E5EAE8DC0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_cases_per_million]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>total_cases_per_million</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_4BCA49D775274FBFB0F6107E5EAE8DC0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_cases_per_million]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>new_cases_per_million</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_4BCA49D775274FBFB0F6107E5EAE8DC0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases_smoothed_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_cases_smoothed_per_million]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>new_cases_smoothed_per_million</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_4BCA49D775274FBFB0F6107E5EAE8DC0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_deaths_per_million]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>total_deaths_per_million</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_4BCA49D775274FBFB0F6107E5EAE8DC0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_deaths_per_million]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>new_deaths_per_million</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_4BCA49D775274FBFB0F6107E5EAE8DC0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths_smoothed_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_deaths_smoothed_per_million]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>new_deaths_smoothed_per_million</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_4BCA49D775274FBFB0F6107E5EAE8DC0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>reproduction_rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[reproduction_rate]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>reproduction_rate</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_4BCA49D775274FBFB0F6107E5EAE8DC0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>icu_patients</remote-name>
            <remote-type>129</remote-type>
            <local-name>[icu_patients]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>icu_patients</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_4BCA49D775274FBFB0F6107E5EAE8DC0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>icu_patients_per_million</remote-name>
            <remote-type>129</remote-type>
            <local-name>[icu_patients_per_million]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>icu_patients_per_million</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_4BCA49D775274FBFB0F6107E5EAE8DC0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hosp_patients</remote-name>
            <remote-type>129</remote-type>
            <local-name>[hosp_patients]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>hosp_patients</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_4BCA49D775274FBFB0F6107E5EAE8DC0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hosp_patients_per_million</remote-name>
            <remote-type>129</remote-type>
            <local-name>[hosp_patients_per_million]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>hosp_patients_per_million</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_4BCA49D775274FBFB0F6107E5EAE8DC0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weekly_icu_admissions</remote-name>
            <remote-type>129</remote-type>
            <local-name>[weekly_icu_admissions]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>weekly_icu_admissions</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_4BCA49D775274FBFB0F6107E5EAE8DC0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weekly_icu_admissions_per_million</remote-name>
            <remote-type>129</remote-type>
            <local-name>[weekly_icu_admissions_per_million]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>weekly_icu_admissions_per_million</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_4BCA49D775274FBFB0F6107E5EAE8DC0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weekly_hosp_admissions</remote-name>
            <remote-type>129</remote-type>
            <local-name>[weekly_hosp_admissions]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>weekly_hosp_admissions</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_4BCA49D775274FBFB0F6107E5EAE8DC0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weekly_hosp_admissions_per_million</remote-name>
            <remote-type>129</remote-type>
            <local-name>[weekly_hosp_admissions_per_million]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>weekly_hosp_admissions_per_million</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_4BCA49D775274FBFB0F6107E5EAE8DC0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_tests</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_tests]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>new_tests</remote-alias>
            <ordinal>25</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_4BCA49D775274FBFB0F6107E5EAE8DC0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_tests</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_tests]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>total_tests</remote-alias>
            <ordinal>26</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_4BCA49D775274FBFB0F6107E5EAE8DC0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_tests_per_thousand</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_tests_per_thousand]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>total_tests_per_thousand</remote-alias>
            <ordinal>27</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_4BCA49D775274FBFB0F6107E5EAE8DC0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_tests_per_thousand</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_tests_per_thousand]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>new_tests_per_thousand</remote-alias>
            <ordinal>28</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_4BCA49D775274FBFB0F6107E5EAE8DC0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_tests_smoothed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_tests_smoothed]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>new_tests_smoothed</remote-alias>
            <ordinal>29</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_4BCA49D775274FBFB0F6107E5EAE8DC0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_tests_smoothed_per_thousand</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_tests_smoothed_per_thousand]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>new_tests_smoothed_per_thousand</remote-alias>
            <ordinal>30</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_4BCA49D775274FBFB0F6107E5EAE8DC0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>positive_rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[positive_rate]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>positive_rate</remote-alias>
            <ordinal>31</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_4BCA49D775274FBFB0F6107E5EAE8DC0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tests_per_case</remote-name>
            <remote-type>5</remote-type>
            <local-name>[tests_per_case]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>tests_per_case</remote-alias>
            <ordinal>32</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_4BCA49D775274FBFB0F6107E5EAE8DC0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tests_units</remote-name>
            <remote-type>129</remote-type>
            <local-name>[tests_units]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>tests_units</remote-alias>
            <ordinal>33</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_4BCA49D775274FBFB0F6107E5EAE8DC0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_vaccinations</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_vaccinations]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>total_vaccinations</remote-alias>
            <ordinal>34</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_4BCA49D775274FBFB0F6107E5EAE8DC0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>people_vaccinated</remote-name>
            <remote-type>5</remote-type>
            <local-name>[people_vaccinated]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>people_vaccinated</remote-alias>
            <ordinal>35</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_4BCA49D775274FBFB0F6107E5EAE8DC0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>people_fully_vaccinated</remote-name>
            <remote-type>5</remote-type>
            <local-name>[people_fully_vaccinated]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>people_fully_vaccinated</remote-alias>
            <ordinal>36</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_4BCA49D775274FBFB0F6107E5EAE8DC0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_vaccinations</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_vaccinations]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>new_vaccinations</remote-alias>
            <ordinal>37</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_4BCA49D775274FBFB0F6107E5EAE8DC0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_vaccinations_smoothed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_vaccinations_smoothed]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>new_vaccinations_smoothed</remote-alias>
            <ordinal>38</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_4BCA49D775274FBFB0F6107E5EAE8DC0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_vaccinations_per_hundred</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_vaccinations_per_hundred]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>total_vaccinations_per_hundred</remote-alias>
            <ordinal>39</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_4BCA49D775274FBFB0F6107E5EAE8DC0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>people_vaccinated_per_hundred</remote-name>
            <remote-type>5</remote-type>
            <local-name>[people_vaccinated_per_hundred]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>people_vaccinated_per_hundred</remote-alias>
            <ordinal>40</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_4BCA49D775274FBFB0F6107E5EAE8DC0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>people_fully_vaccinated_per_hundred</remote-name>
            <remote-type>5</remote-type>
            <local-name>[people_fully_vaccinated_per_hundred]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>people_fully_vaccinated_per_hundred</remote-alias>
            <ordinal>41</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_4BCA49D775274FBFB0F6107E5EAE8DC0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_vaccinations_smoothed_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_vaccinations_smoothed_per_million]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>new_vaccinations_smoothed_per_million</remote-alias>
            <ordinal>42</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_4BCA49D775274FBFB0F6107E5EAE8DC0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>stringency_index</remote-name>
            <remote-type>5</remote-type>
            <local-name>[stringency_index]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>stringency_index</remote-alias>
            <ordinal>43</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_4BCA49D775274FBFB0F6107E5EAE8DC0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>5</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>44</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_4BCA49D775274FBFB0F6107E5EAE8DC0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population_density</remote-name>
            <remote-type>5</remote-type>
            <local-name>[population_density]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>population_density</remote-alias>
            <ordinal>45</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_4BCA49D775274FBFB0F6107E5EAE8DC0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>median_age</remote-name>
            <remote-type>5</remote-type>
            <local-name>[median_age]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>median_age</remote-alias>
            <ordinal>46</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_4BCA49D775274FBFB0F6107E5EAE8DC0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>aged_65_older</remote-name>
            <remote-type>5</remote-type>
            <local-name>[aged_65_older]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>aged_65_older</remote-alias>
            <ordinal>47</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_4BCA49D775274FBFB0F6107E5EAE8DC0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>aged_70_older</remote-name>
            <remote-type>5</remote-type>
            <local-name>[aged_70_older]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>aged_70_older</remote-alias>
            <ordinal>48</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_4BCA49D775274FBFB0F6107E5EAE8DC0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gdp_per_capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[gdp_per_capita]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>gdp_per_capita</remote-alias>
            <ordinal>49</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_4BCA49D775274FBFB0F6107E5EAE8DC0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>extreme_poverty</remote-name>
            <remote-type>5</remote-type>
            <local-name>[extreme_poverty]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>extreme_poverty</remote-alias>
            <ordinal>50</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_4BCA49D775274FBFB0F6107E5EAE8DC0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cardiovasc_death_rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cardiovasc_death_rate]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>cardiovasc_death_rate</remote-alias>
            <ordinal>51</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_4BCA49D775274FBFB0F6107E5EAE8DC0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>diabetes_prevalence</remote-name>
            <remote-type>5</remote-type>
            <local-name>[diabetes_prevalence]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>diabetes_prevalence</remote-alias>
            <ordinal>52</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_4BCA49D775274FBFB0F6107E5EAE8DC0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>female_smokers</remote-name>
            <remote-type>5</remote-type>
            <local-name>[female_smokers]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>female_smokers</remote-alias>
            <ordinal>53</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_4BCA49D775274FBFB0F6107E5EAE8DC0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>male_smokers</remote-name>
            <remote-type>5</remote-type>
            <local-name>[male_smokers]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>male_smokers</remote-alias>
            <ordinal>54</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_4BCA49D775274FBFB0F6107E5EAE8DC0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>handwashing_facilities</remote-name>
            <remote-type>5</remote-type>
            <local-name>[handwashing_facilities]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>handwashing_facilities</remote-alias>
            <ordinal>55</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_4BCA49D775274FBFB0F6107E5EAE8DC0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hospital_beds_per_thousand</remote-name>
            <remote-type>5</remote-type>
            <local-name>[hospital_beds_per_thousand]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>hospital_beds_per_thousand</remote-alias>
            <ordinal>56</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_4BCA49D775274FBFB0F6107E5EAE8DC0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>life_expectancy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[life_expectancy]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>life_expectancy</remote-alias>
            <ordinal>57</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_4BCA49D775274FBFB0F6107E5EAE8DC0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>human_development_index</remote-name>
            <remote-type>5</remote-type>
            <local-name>[human_development_index]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>human_development_index</remote-alias>
            <ordinal>58</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_4BCA49D775274FBFB0F6107E5EAE8DC0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='owid-covid-data.csv' datatype='table' name='[__tableau_internal_object_id__].[owid-covid-data.csv_4BCA49D775274FBFB0F6107E5EAE8DC0]' role='measure' type='quantitative' />
      <column caption='Aged 65 Older' datatype='real' name='[aged_65_older]' role='measure' type='quantitative' />
      <column caption='Aged 70 Older' datatype='real' name='[aged_70_older]' role='measure' type='quantitative' />
      <column caption='Cardiovasc Death Rate' datatype='real' name='[cardiovasc_death_rate]' role='measure' type='quantitative' />
      <column caption='Continent' datatype='string' name='[continent]' role='dimension' type='nominal' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Diabetes Prevalence' datatype='real' name='[diabetes_prevalence]' role='measure' type='quantitative' />
      <column caption='Extreme Poverty' datatype='real' name='[extreme_poverty]' role='measure' type='quantitative' />
      <column caption='Female Smokers' datatype='real' name='[female_smokers]' role='measure' type='quantitative' />
      <column caption='Gdp Per Capita' datatype='real' name='[gdp_per_capita]' role='measure' type='quantitative' />
      <column caption='Handwashing Facilities' datatype='real' name='[handwashing_facilities]' role='measure' type='quantitative' />
      <column caption='Hosp Patients' datatype='string' name='[hosp_patients]' role='dimension' type='nominal' />
      <column caption='Hosp Patients Per Million' datatype='string' name='[hosp_patients_per_million]' role='dimension' type='nominal' />
      <column caption='Hospital Beds Per Thousand' datatype='real' name='[hospital_beds_per_thousand]' role='measure' type='quantitative' />
      <column caption='Human Development Index' datatype='real' name='[human_development_index]' role='measure' type='quantitative' />
      <column caption='Icu Patients' datatype='string' name='[icu_patients]' role='dimension' type='nominal' />
      <column caption='Icu Patients Per Million' datatype='string' name='[icu_patients_per_million]' role='dimension' type='nominal' />
      <column caption='Iso Code' datatype='string' name='[iso_code]' role='dimension' type='nominal' />
      <column caption='Life Expectancy' datatype='real' name='[life_expectancy]' role='measure' type='quantitative' />
      <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
      <column caption='Male Smokers' datatype='real' name='[male_smokers]' role='measure' type='quantitative' />
      <column caption='Median Age' datatype='real' name='[median_age]' role='measure' type='quantitative' />
      <column caption='New Cases' datatype='real' name='[new_cases]' role='measure' type='quantitative' />
      <column caption='New Cases Per Million' datatype='real' name='[new_cases_per_million]' role='measure' type='quantitative' />
      <column caption='New Cases Smoothed' datatype='real' name='[new_cases_smoothed]' role='measure' type='quantitative' />
      <column caption='New Cases Smoothed Per Million' datatype='real' name='[new_cases_smoothed_per_million]' role='measure' type='quantitative' />
      <column caption='New Deaths' datatype='real' name='[new_deaths]' role='measure' type='quantitative' />
      <column caption='New Deaths Per Million' datatype='real' name='[new_deaths_per_million]' role='measure' type='quantitative' />
      <column caption='New Deaths Smoothed' datatype='real' name='[new_deaths_smoothed]' role='measure' type='quantitative' />
      <column caption='New Deaths Smoothed Per Million' datatype='real' name='[new_deaths_smoothed_per_million]' role='measure' type='quantitative' />
      <column caption='New Tests' datatype='real' name='[new_tests]' role='measure' type='quantitative' />
      <column caption='New Tests Per Thousand' datatype='real' name='[new_tests_per_thousand]' role='measure' type='quantitative' />
      <column caption='New Tests Smoothed' datatype='real' name='[new_tests_smoothed]' role='measure' type='quantitative' />
      <column caption='New Tests Smoothed Per Thousand' datatype='real' name='[new_tests_smoothed_per_thousand]' role='measure' type='quantitative' />
      <column caption='New Vaccinations' datatype='real' name='[new_vaccinations]' role='measure' type='quantitative' />
      <column caption='New Vaccinations Smoothed' datatype='real' name='[new_vaccinations_smoothed]' role='measure' type='quantitative' />
      <column caption='New Vaccinations Smoothed Per Million' datatype='real' name='[new_vaccinations_smoothed_per_million]' role='measure' type='quantitative' />
      <column caption='People Fully Vaccinated' datatype='real' name='[people_fully_vaccinated]' role='measure' type='quantitative' />
      <column caption='People Fully Vaccinated Per Hundred' datatype='real' name='[people_fully_vaccinated_per_hundred]' role='measure' type='quantitative' />
      <column caption='People Vaccinated' datatype='real' name='[people_vaccinated]' role='measure' type='quantitative' />
      <column caption='People Vaccinated Per Hundred' datatype='real' name='[people_vaccinated_per_hundred]' role='measure' type='quantitative' />
      <column caption='Population' datatype='real' name='[population]' role='measure' type='quantitative' />
      <column caption='Population Density' datatype='real' name='[population_density]' role='measure' type='quantitative' />
      <column caption='Positive Rate' datatype='real' name='[positive_rate]' role='measure' type='quantitative' />
      <column caption='Reproduction Rate' datatype='real' name='[reproduction_rate]' role='measure' type='quantitative' />
      <column caption='Stringency Index' datatype='real' name='[stringency_index]' role='measure' type='quantitative' />
      <column caption='Tests Per Case' datatype='real' name='[tests_per_case]' role='measure' type='quantitative' />
      <column caption='Tests Units' datatype='string' name='[tests_units]' role='dimension' type='nominal' />
      <column caption='Total Cases' datatype='real' name='[total_cases]' role='measure' type='quantitative' />
      <column caption='Total Cases Per Million' datatype='real' name='[total_cases_per_million]' role='measure' type='quantitative' />
      <column caption='Total Deaths' datatype='real' name='[total_deaths]' role='measure' type='quantitative' />
      <column caption='Total Deaths Per Million' datatype='real' name='[total_deaths_per_million]' role='measure' type='quantitative' />
      <column caption='Total Tests' datatype='real' name='[total_tests]' role='measure' type='quantitative' />
      <column caption='Total Tests Per Thousand' datatype='real' name='[total_tests_per_thousand]' role='measure' type='quantitative' />
      <column caption='Total Vaccinations' datatype='real' name='[total_vaccinations]' role='measure' type='quantitative' />
      <column caption='Total Vaccinations Per Hundred' datatype='real' name='[total_vaccinations_per_hundred]' role='measure' type='quantitative' />
      <column caption='Weekly Hosp Admissions' datatype='string' name='[weekly_hosp_admissions]' role='dimension' type='nominal' />
      <column caption='Weekly Hosp Admissions Per Million' datatype='string' name='[weekly_hosp_admissions_per_million]' role='dimension' type='nominal' />
      <column caption='Weekly Icu Admissions' datatype='string' name='[weekly_icu_admissions]' role='dimension' type='nominal' />
      <column caption='Weekly Icu Admissions Per Million' datatype='string' name='[weekly_icu_admissions_per_million]' role='dimension' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='owid-covid-data.csv' id='owid-covid-data.csv_4BCA49D775274FBFB0F6107E5EAE8DC0'>
            <properties context=''>
              <relation connection='textscan.0ftzw0c1mbv83213vrhuv1h45hva' name='owid-covid-data.csv' table='[owid-covid-data#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='string' name='iso_code' ordinal='0' />
                  <column datatype='string' name='continent' ordinal='1' />
                  <column datatype='string' name='location' ordinal='2' />
                  <column datatype='date' name='date' ordinal='3' />
                  <column datatype='real' name='total_cases' ordinal='4' />
                  <column datatype='real' name='new_cases' ordinal='5' />
                  <column datatype='real' name='new_cases_smoothed' ordinal='6' />
                  <column datatype='real' name='total_deaths' ordinal='7' />
                  <column datatype='real' name='new_deaths' ordinal='8' />
                  <column datatype='real' name='new_deaths_smoothed' ordinal='9' />
                  <column datatype='real' name='total_cases_per_million' ordinal='10' />
                  <column datatype='real' name='new_cases_per_million' ordinal='11' />
                  <column datatype='real' name='new_cases_smoothed_per_million' ordinal='12' />
                  <column datatype='real' name='total_deaths_per_million' ordinal='13' />
                  <column datatype='real' name='new_deaths_per_million' ordinal='14' />
                  <column datatype='real' name='new_deaths_smoothed_per_million' ordinal='15' />
                  <column datatype='real' name='reproduction_rate' ordinal='16' />
                  <column datatype='string' name='icu_patients' ordinal='17' />
                  <column datatype='string' name='icu_patients_per_million' ordinal='18' />
                  <column datatype='string' name='hosp_patients' ordinal='19' />
                  <column datatype='string' name='hosp_patients_per_million' ordinal='20' />
                  <column datatype='string' name='weekly_icu_admissions' ordinal='21' />
                  <column datatype='string' name='weekly_icu_admissions_per_million' ordinal='22' />
                  <column datatype='string' name='weekly_hosp_admissions' ordinal='23' />
                  <column datatype='string' name='weekly_hosp_admissions_per_million' ordinal='24' />
                  <column datatype='real' name='new_tests' ordinal='25' />
                  <column datatype='real' name='total_tests' ordinal='26' />
                  <column datatype='real' name='total_tests_per_thousand' ordinal='27' />
                  <column datatype='real' name='new_tests_per_thousand' ordinal='28' />
                  <column datatype='real' name='new_tests_smoothed' ordinal='29' />
                  <column datatype='real' name='new_tests_smoothed_per_thousand' ordinal='30' />
                  <column datatype='real' name='positive_rate' ordinal='31' />
                  <column datatype='real' name='tests_per_case' ordinal='32' />
                  <column datatype='string' name='tests_units' ordinal='33' />
                  <column datatype='real' name='total_vaccinations' ordinal='34' />
                  <column datatype='real' name='people_vaccinated' ordinal='35' />
                  <column datatype='real' name='people_fully_vaccinated' ordinal='36' />
                  <column datatype='real' name='new_vaccinations' ordinal='37' />
                  <column datatype='real' name='new_vaccinations_smoothed' ordinal='38' />
                  <column datatype='real' name='total_vaccinations_per_hundred' ordinal='39' />
                  <column datatype='real' name='people_vaccinated_per_hundred' ordinal='40' />
                  <column datatype='real' name='people_fully_vaccinated_per_hundred' ordinal='41' />
                  <column datatype='real' name='new_vaccinations_smoothed_per_million' ordinal='42' />
                  <column datatype='real' name='stringency_index' ordinal='43' />
                  <column datatype='real' name='population' ordinal='44' />
                  <column datatype='real' name='population_density' ordinal='45' />
                  <column datatype='real' name='median_age' ordinal='46' />
                  <column datatype='real' name='aged_65_older' ordinal='47' />
                  <column datatype='real' name='aged_70_older' ordinal='48' />
                  <column datatype='real' name='gdp_per_capita' ordinal='49' />
                  <column datatype='real' name='extreme_poverty' ordinal='50' />
                  <column datatype='real' name='cardiovasc_death_rate' ordinal='51' />
                  <column datatype='real' name='diabetes_prevalence' ordinal='52' />
                  <column datatype='real' name='female_smokers' ordinal='53' />
                  <column datatype='real' name='male_smokers' ordinal='54' />
                  <column datatype='real' name='handwashing_facilities' ordinal='55' />
                  <column datatype='real' name='hospital_beds_per_thousand' ordinal='56' />
                  <column datatype='real' name='life_expectancy' ordinal='57' />
                  <column datatype='real' name='human_development_index' ordinal='58' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='AVG(Run Rate)/Team'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#f28e2b' fontname='Tableau Bold' underline='true'>Average Run Rate for Winning</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='matches+' name='federated.1m2egue0yuylqw16ddzap0sbhrp1' />
          </datasources>
          <datasource-dependencies datasource='federated.1m2egue0yuylqw16ddzap0sbhrp1'>
            <column-instance column='[win_by_runs]' derivation='Avg' name='[avg:win_by_runs:qk]' pivot='key' type='quantitative' />
            <column-instance column='[winner]' derivation='None' name='[none:winner:nk]' pivot='key' type='nominal' />
            <column caption='Win By Runs' datatype='integer' name='[win_by_runs]' role='measure' type='quantitative' />
            <column caption='Winner' datatype='string' name='[winner]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1m2egue0yuylqw16ddzap0sbhrp1].[none:winner:nk]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:winner:nk]' />
              <groupfilter function='member' level='[none:winner:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1m2egue0yuylqw16ddzap0sbhrp1].[none:winner:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1m2egue0yuylqw16ddzap0sbhrp1].[avg:win_by_runs:qk]</rows>
        <cols>[federated.1m2egue0yuylqw16ddzap0sbhrp1].[none:winner:nk]</cols>
      </table>
      <simple-id uuid='{8A30F0D1-43AA-464F-B653-48E48E9E4A03}' />
    </worksheet>
    <worksheet name='Batsman Stats'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#f28e2b' fontname='Tableau Bold' underline='true'>Most Successful Batsman Statisics</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='matches+' name='federated.1m2egue0yuylqw16ddzap0sbhrp1' />
          </datasources>
          <datasource-dependencies datasource='federated.1m2egue0yuylqw16ddzap0sbhrp1'>
            <column caption='Batsman' datatype='string' name='[batsman]' role='dimension' type='nominal' />
            <column caption='Batsman Runs' datatype='integer' name='[batsman_runs]' role='measure' type='quantitative' />
            <column-instance column='[player_of_match]' derivation='Count' name='[cnt:player_of_match:qk]' pivot='key' type='quantitative' />
            <column-instance column='[batsman]' derivation='None' name='[none:batsman:nk]' pivot='key' type='nominal' />
            <column caption='Player Of Match' datatype='string' name='[player_of_match]' role='dimension' type='nominal' />
            <column-instance column='[batsman_runs]' derivation='Sum' name='[sum:batsman_runs:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_runs]' derivation='Sum' name='[sum:total_runs:qk]' pivot='key' type='quantitative' />
            <column caption='Total Runs' datatype='integer' name='[total_runs]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1m2egue0yuylqw16ddzap0sbhrp1].[none:batsman:nk]'>
            <groupfilter count='25' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([total_runs])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:batsman:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1m2egue0yuylqw16ddzap0sbhrp1].[none:batsman:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1m2egue0yuylqw16ddzap0sbhrp1].[none:batsman:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1m2egue0yuylqw16ddzap0sbhrp1].[cnt:player_of_match:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1m2egue0yuylqw16ddzap0sbhrp1].[none:batsman:nk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='vertical-align' value='top' />
                <format attr='text-orientation' value='0' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='range' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1m2egue0yuylqw16ddzap0sbhrp1].[sum:batsman_runs:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1m2egue0yuylqw16ddzap0sbhrp1].[none:batsman:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1m2egue0yuylqw16ddzap0sbhrp1].[sum:total_runs:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1m2egue0yuylqw16ddzap0sbhrp1].[none:batsman:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1m2egue0yuylqw16ddzap0sbhrp1].[sum:batsman_runs:qk] + ([federated.1m2egue0yuylqw16ddzap0sbhrp1].[sum:total_runs:qk] + [federated.1m2egue0yuylqw16ddzap0sbhrp1].[cnt:player_of_match:qk]))</rows>
        <cols>[federated.1m2egue0yuylqw16ddzap0sbhrp1].[none:batsman:nk]</cols>
      </table>
      <simple-id uuid='{6CD5BC51-E3CC-4CEF-AAAC-48C4C93CC050}' />
    </worksheet>
    <worksheet name='Bowler Stats'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#f28e2b' fontname='Tableau Bold' underline='true'>Most Successful Bowler Statisics</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='matches+' name='federated.1m2egue0yuylqw16ddzap0sbhrp1' />
          </datasources>
          <datasource-dependencies datasource='federated.1m2egue0yuylqw16ddzap0sbhrp1'>
            <column caption='Ball' datatype='integer' name='[ball]' role='measure' type='quantitative' />
            <column caption='Bowler' datatype='string' name='[bowler]' role='dimension' type='nominal' />
            <column-instance column='[player_of_match]' derivation='Count' name='[cnt:player_of_match:qk]' pivot='key' type='quantitative' />
            <column-instance column='[bowler]' derivation='None' name='[none:bowler:nk]' pivot='key' type='nominal' />
            <column caption='Player Of Match' datatype='string' name='[player_of_match]' role='dimension' type='nominal' />
            <column-instance column='[ball]' derivation='Sum' name='[sum:ball:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_runs]' derivation='Sum' name='[sum:total_runs:qk]' pivot='key' type='quantitative' />
            <column caption='Total Runs' datatype='integer' name='[total_runs]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1m2egue0yuylqw16ddzap0sbhrp1].[none:bowler:nk]'>
            <groupfilter count='25' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([player_of_match])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:bowler:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1m2egue0yuylqw16ddzap0sbhrp1].[none:bowler:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1m2egue0yuylqw16ddzap0sbhrp1].[none:bowler:nk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='vertical-align' value='top' />
                <format attr='text-orientation' value='0' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1m2egue0yuylqw16ddzap0sbhrp1].[cnt:player_of_match:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1m2egue0yuylqw16ddzap0sbhrp1].[none:bowler:nk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='vertical-align' value='top' />
                <format attr='text-orientation' value='0' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1m2egue0yuylqw16ddzap0sbhrp1].[sum:ball:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1m2egue0yuylqw16ddzap0sbhrp1].[none:bowler:nk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-orientation' value='0' />
                <format attr='vertical-align' value='top' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-mode' value='all' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1m2egue0yuylqw16ddzap0sbhrp1].[sum:total_runs:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1m2egue0yuylqw16ddzap0sbhrp1].[none:bowler:nk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='vertical-align' value='top' />
                <format attr='text-orientation' value='0' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='range' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1m2egue0yuylqw16ddzap0sbhrp1].[sum:ball:qk] + ([federated.1m2egue0yuylqw16ddzap0sbhrp1].[sum:total_runs:qk] + [federated.1m2egue0yuylqw16ddzap0sbhrp1].[cnt:player_of_match:qk]))</rows>
        <cols>[federated.1m2egue0yuylqw16ddzap0sbhrp1].[none:bowler:nk]</cols>
      </table>
      <simple-id uuid='{1B14F7F9-7E6D-4E24-81F7-FCE7C5BAB87D}' />
    </worksheet>
    <worksheet name='Match Distribution'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#f28e2b' fontname='Tableau Bold' underline='true'>Matches Played - City</run>
            <run bold='true' fontalignment='1' fontcolor='#f28e2b' fontname='Tableau Bold'> (2007-2020)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='matches+' name='federated.1m2egue0yuylqw16ddzap0sbhrp1' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1m2egue0yuylqw16ddzap0sbhrp1'>
            <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <semantic-values semantic-role='[City].[Name]'>
                <semantic-value key='&quot;Ahmedabad&quot;' value='&quot;Ahmadabad&quot;' />
                <semantic-value key='&quot;Bangalore&quot;' value='&quot;Bengaluru&quot;' />
                <semantic-value key='&quot;Dharamsala&quot;' value='&quot;Palampur&quot;' />
                <semantic-value key='&quot;Kochi&quot;' value='&quot;Cochin&quot;' />
                <semantic-value key='&quot;Mohali&quot;' value='&quot;Mohari&quot;' />
                <semantic-value key='&quot;Visakhapatnam&quot;' value='&quot;Vishakhapatnam&quot;' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;Delhi&quot;' value='28.359999999999999' />
                <semantic-value key='&quot;Hyderabad&quot;' value='17.361699999999999' />
                <semantic-value key='&quot;Indore&quot;' value='22.43' />
                <semantic-value key='&quot;Johannesburg&quot;' value='26.120000000000001' />
                <semantic-value key='&quot;Kimberley&quot;' value='28.742000000000001' />
                <semantic-value key='&quot;Raipur&quot;' value='21.25' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;Delhi&quot;' value='77.129999999999995' />
                <semantic-value key='&quot;Hyderabad&quot;' value='78.475099999999998' />
                <semantic-value key='&quot;Indore&quot;' value='75.5' />
                <semantic-value key='&quot;Johannesburg&quot;' value='28.199999999999999' />
                <semantic-value key='&quot;Kimberley&quot;' value='24.771999999999998' />
                <semantic-value key='&quot;Raipur&quot;' value='81.629999999999995' />
              </semantic-values>
            </column>
            <column-instance column='[id]' derivation='Count' name='[cnt:id:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Id' datatype='integer' name='[id]' role='dimension' type='ordinal' />
            <column-instance column='[city]' derivation='None' name='[none:city:nk]' pivot='key' type='nominal' />
            <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1m2egue0yuylqw16ddzap0sbhrp1].[none:city:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:city:nk]' />
              <groupfilter function='member' level='[none:city:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1m2egue0yuylqw16ddzap0sbhrp1].[yr:date:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[yr:date:ok]' member='2007' />
              <groupfilter function='member' level='[yr:date:ok]' member='2008' />
              <groupfilter function='member' level='[yr:date:ok]' member='2009' />
              <groupfilter function='member' level='[yr:date:ok]' member='2010' />
              <groupfilter function='member' level='[yr:date:ok]' member='2011' />
              <groupfilter function='member' level='[yr:date:ok]' member='2012' />
              <groupfilter function='member' level='[yr:date:ok]' member='2013' />
              <groupfilter function='member' level='[yr:date:ok]' member='2014' />
              <groupfilter function='member' level='[yr:date:ok]' member='2015' />
              <groupfilter function='member' level='[yr:date:ok]' member='2016' />
              <groupfilter function='member' level='[yr:date:ok]' member='2017' />
              <groupfilter function='member' level='[yr:date:ok]' member='2018' />
              <groupfilter function='member' level='[yr:date:ok]' member='2019' />
              <groupfilter function='member' level='[yr:date:ok]' member='2020' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1m2egue0yuylqw16ddzap0sbhrp1].[none:city:nk]</column>
            <column>[federated.1m2egue0yuylqw16ddzap0sbhrp1].[yr:date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='normal' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1m2egue0yuylqw16ddzap0sbhrp1].[none:city:nk]' />
              <size column='[federated.1m2egue0yuylqw16ddzap0sbhrp1].[none:city:nk]' />
              <text column='[federated.1m2egue0yuylqw16ddzap0sbhrp1].[none:city:nk]' />
              <text column='[federated.1m2egue0yuylqw16ddzap0sbhrp1].[cnt:id:qk]' />
              <lod column='[federated.1m2egue0yuylqw16ddzap0sbhrp1].[none:city:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1m2egue0yuylqw16ddzap0sbhrp1].[Latitude (generated)]</rows>
        <cols>[federated.1m2egue0yuylqw16ddzap0sbhrp1].[Longitude (generated)]</cols>
        <mark-labels>
          <mark-label id='5' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1m2egue0yuylqw16ddzap0sbhrp1].[Longitude (generated)]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1m2egue0yuylqw16ddzap0sbhrp1].[Latitude (generated)]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1m2egue0yuylqw16ddzap0sbhrp1].[none:city:nk]</field>
                  <field>[federated.1m2egue0yuylqw16ddzap0sbhrp1].[Latitude (generated)]</field>
                  <field>[federated.1m2egue0yuylqw16ddzap0sbhrp1].[Longitude (generated)]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Chennai&quot;</value>
                <value>13.09</value>
                <value>80.27</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='7' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1m2egue0yuylqw16ddzap0sbhrp1].[Longitude (generated)]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1m2egue0yuylqw16ddzap0sbhrp1].[Latitude (generated)]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1m2egue0yuylqw16ddzap0sbhrp1].[none:city:nk]</field>
                  <field>[federated.1m2egue0yuylqw16ddzap0sbhrp1].[Latitude (generated)]</field>
                  <field>[federated.1m2egue0yuylqw16ddzap0sbhrp1].[Longitude (generated)]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Mohali&quot;</value>
                <value>21.3083</value>
                <value>79.675</value>
              </tuple>
            </tuple-reference>
          </mark-label>
        </mark-labels>
      </table>
      <simple-id uuid='{10C30E82-FB25-461F-9D5C-18797E50CE33}' />
    </worksheet>
    <worksheet name='Matches/Year'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#f28e2b' fontname='Tableau Bold' underline='true'>No. of Matches played in IPL w.r.t Year</run>
            <run bold='true' fontalignment='1' fontcolor='#f28e2b' fontname='Tableau Bold'> (2007-2020)</run>
            <run fontalignment='1'>Æ&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='matches+' name='federated.1m2egue0yuylqw16ddzap0sbhrp1' />
          </datasources>
          <datasource-dependencies datasource='federated.1m2egue0yuylqw16ddzap0sbhrp1'>
            <_.fcp.ObjectModelTableType.false...column caption='matches.csv' datatype='integer' name='[__tableau_internal_object_id__].[matches.csv_DD4ADFDDE8FF47B5BFA53E86D6B2DB68]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[matches.csv_DD4ADFDDE8FF47B5BFA53E86D6B2DB68]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:matches.csv_DD4ADFDDE8FF47B5BFA53E86D6B2DB68:qk]' pivot='key' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='matches.csv' datatype='table' name='[__tableau_internal_object_id__].[matches.csv_DD4ADFDDE8FF47B5BFA53E86D6B2DB68]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1m2egue0yuylqw16ddzap0sbhrp1].[yr:date:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[yr:date:ok]' member='2007' />
              <groupfilter function='member' level='[yr:date:ok]' member='2008' />
              <groupfilter function='member' level='[yr:date:ok]' member='2009' />
              <groupfilter function='member' level='[yr:date:ok]' member='2010' />
              <groupfilter function='member' level='[yr:date:ok]' member='2011' />
              <groupfilter function='member' level='[yr:date:ok]' member='2012' />
              <groupfilter function='member' level='[yr:date:ok]' member='2013' />
              <groupfilter function='member' level='[yr:date:ok]' member='2014' />
              <groupfilter function='member' level='[yr:date:ok]' member='2015' />
              <groupfilter function='member' level='[yr:date:ok]' member='2016' />
              <groupfilter function='member' level='[yr:date:ok]' member='2017' />
              <groupfilter function='member' level='[yr:date:ok]' member='2018' />
              <groupfilter function='member' level='[yr:date:ok]' member='2019' />
              <groupfilter function='member' level='[yr:date:ok]' member='2020' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1m2egue0yuylqw16ddzap0sbhrp1].[yr:date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1m2egue0yuylqw16ddzap0sbhrp1].[__tableau_internal_object_id__].[cnt:matches.csv_DD4ADFDDE8FF47B5BFA53E86D6B2DB68:qk]' scope='rows' value='No. of Matches Played' />
            <encoding attr='space' class='0' domain-expand='false' field='[federated.1m2egue0yuylqw16ddzap0sbhrp1].[__tableau_internal_object_id__].[cnt:matches.csv_DD4ADFDDE8FF47B5BFA53E86D6B2DB68:qk]' field-type='quantitative' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1m2egue0yuylqw16ddzap0sbhrp1].[__tableau_internal_object_id__].[cnt:matches.csv_DD4ADFDDE8FF47B5BFA53E86D6B2DB68:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1m2egue0yuylqw16ddzap0sbhrp1].[__tableau_internal_object_id__].[cnt:matches.csv_DD4ADFDDE8FF47B5BFA53E86D6B2DB68:qk]</rows>
        <cols>[federated.1m2egue0yuylqw16ddzap0sbhrp1].[yr:date:ok]</cols>
      </table>
      <simple-id uuid='{4644FB99-D04B-4A8A-B5FC-B8FDD8BC7560}' />
    </worksheet>
    <worksheet name='Teams Ranking (WIN)'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontcolor='#f28e2b' fontname='Tableau Bold' underline='true'>Most Successful Teams - Factor by Win</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='matches+' name='federated.1m2egue0yuylqw16ddzap0sbhrp1' />
          </datasources>
          <datasource-dependencies datasource='federated.1m2egue0yuylqw16ddzap0sbhrp1'>
            <_.fcp.ObjectModelTableType.false...column caption='matches.csv' datatype='integer' name='[__tableau_internal_object_id__].[matches.csv_DD4ADFDDE8FF47B5BFA53E86D6B2DB68]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[matches.csv_DD4ADFDDE8FF47B5BFA53E86D6B2DB68]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:matches.csv_DD4ADFDDE8FF47B5BFA53E86D6B2DB68:qk]' pivot='key' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='matches.csv' datatype='table' name='[__tableau_internal_object_id__].[matches.csv_DD4ADFDDE8FF47B5BFA53E86D6B2DB68]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[matches.csv_DD4ADFDDE8FF47B5BFA53E86D6B2DB68]' derivation='Count' name='[__tableau_internal_object_id__].[rank:cnt:matches.csv_DD4ADFDDE8FF47B5BFA53E86D6B2DB68:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' rank-options='Competition,Descending' type='Rank' />
            </column-instance>
            <column-instance column='[winner]' derivation='None' name='[none:winner:nk]' pivot='key' type='nominal' />
            <column caption='Winner' datatype='string' name='[winner]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1m2egue0yuylqw16ddzap0sbhrp1].[__tableau_internal_object_id__].[rank:cnt:matches.csv_DD4ADFDDE8FF47B5BFA53E86D6B2DB68:qk]' included-values='all' />
          <filter class='categorical' column='[federated.1m2egue0yuylqw16ddzap0sbhrp1].[none:winner:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:winner:nk]' />
              <groupfilter function='member' level='[none:winner:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1m2egue0yuylqw16ddzap0sbhrp1].[none:winner:nk]</column>
            <column>[federated.1m2egue0yuylqw16ddzap0sbhrp1].[__tableau_internal_object_id__].[rank:cnt:matches.csv_DD4ADFDDE8FF47B5BFA53E86D6B2DB68:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1m2egue0yuylqw16ddzap0sbhrp1].[none:winner:nk]' />
              <text column='[federated.1m2egue0yuylqw16ddzap0sbhrp1].[__tableau_internal_object_id__].[rank:cnt:matches.csv_DD4ADFDDE8FF47B5BFA53E86D6B2DB68:qk]' />
              <lod column='[federated.1m2egue0yuylqw16ddzap0sbhrp1].[none:winner:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1m2egue0yuylqw16ddzap0sbhrp1].[__tableau_internal_object_id__].[cnt:matches.csv_DD4ADFDDE8FF47B5BFA53E86D6B2DB68:qk]</rows>
        <cols>[federated.1m2egue0yuylqw16ddzap0sbhrp1].[none:winner:nk]</cols>
      </table>
      <simple-id uuid='{05F3237C-9C15-4ED0-A156-91B23E42338A}' />
    </worksheet>
    <worksheet name='Toss Statistics'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#f28e2b' fontname='Tableau Bold' underline='true'>Toss Statistics for Each Team</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='matches+' name='federated.1m2egue0yuylqw16ddzap0sbhrp1' />
          </datasources>
          <datasource-dependencies datasource='federated.1m2egue0yuylqw16ddzap0sbhrp1'>
            <_.fcp.ObjectModelTableType.false...column caption='matches.csv' datatype='integer' name='[__tableau_internal_object_id__].[matches.csv_DD4ADFDDE8FF47B5BFA53E86D6B2DB68]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[matches.csv_DD4ADFDDE8FF47B5BFA53E86D6B2DB68]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:matches.csv_DD4ADFDDE8FF47B5BFA53E86D6B2DB68:qk]' pivot='key' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='matches.csv' datatype='table' name='[__tableau_internal_object_id__].[matches.csv_DD4ADFDDE8FF47B5BFA53E86D6B2DB68]' role='measure' type='quantitative' />
            <column-instance column='[toss_decision]' derivation='None' name='[none:toss_decision:nk]' pivot='key' type='nominal' />
            <column-instance column='[toss_winner]' derivation='None' name='[none:toss_winner:nk]' pivot='key' type='nominal' />
            <column caption='Toss Decision' datatype='string' name='[toss_decision]' role='dimension' type='nominal' />
            <column caption='Toss Winner' datatype='string' name='[toss_winner]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.1m2egue0yuylqw16ddzap0sbhrp1].[none:toss_winner:nk]' />
              <size column='[federated.1m2egue0yuylqw16ddzap0sbhrp1].[__tableau_internal_object_id__].[cnt:matches.csv_DD4ADFDDE8FF47B5BFA53E86D6B2DB68:qk]' />
              <text column='[federated.1m2egue0yuylqw16ddzap0sbhrp1].[__tableau_internal_object_id__].[cnt:matches.csv_DD4ADFDDE8FF47B5BFA53E86D6B2DB68:qk]' />
              <text column='[federated.1m2egue0yuylqw16ddzap0sbhrp1].[none:toss_winner:nk]' />
              <text column='[federated.1m2egue0yuylqw16ddzap0sbhrp1].[none:toss_decision:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
        <mark-labels>
          <mark-label id='0' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.1m2egue0yuylqw16ddzap0sbhrp1].[__tableau_internal_object_id__].[cnt:matches.csv_DD4ADFDDE8FF47B5BFA53E86D6B2DB68:qk]</field>
                  <field>[federated.1m2egue0yuylqw16ddzap0sbhrp1].[none:toss_decision:nk]</field>
                  <field>[federated.1m2egue0yuylqw16ddzap0sbhrp1].[none:toss_winner:nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>5</value>
                <value>&quot;field&quot;</value>
                <value>&quot;Kochi Tuskers Kerala&quot;</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='1' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.1m2egue0yuylqw16ddzap0sbhrp1].[__tableau_internal_object_id__].[cnt:matches.csv_DD4ADFDDE8FF47B5BFA53E86D6B2DB68:qk]</field>
                  <field>[federated.1m2egue0yuylqw16ddzap0sbhrp1].[none:toss_decision:nk]</field>
                  <field>[federated.1m2egue0yuylqw16ddzap0sbhrp1].[none:toss_winner:nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>9</value>
                <value>&quot;field&quot;</value>
                <value>&quot;Pune Warriors&quot;</value>
              </tuple>
            </tuple-reference>
          </mark-label>
        </mark-labels>
      </table>
      <simple-id uuid='{9CC17DD8-8215-4AC0-BC11-78B87E857677}' />
    </worksheet>
    <worksheet name='Win/Loss (%)'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#f28e2b' fontname='Tableau Bold' underline='true'>Percentile of Win/Loss against a Team</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='matches+' name='federated.1m2egue0yuylqw16ddzap0sbhrp1' />
          </datasources>
          <datasource-dependencies datasource='federated.1m2egue0yuylqw16ddzap0sbhrp1'>
            <_.fcp.ObjectModelTableType.false...column caption='matches.csv' datatype='integer' name='[__tableau_internal_object_id__].[matches.csv_DD4ADFDDE8FF47B5BFA53E86D6B2DB68]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[matches.csv_DD4ADFDDE8FF47B5BFA53E86D6B2DB68]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:matches.csv_DD4ADFDDE8FF47B5BFA53E86D6B2DB68:qk]' pivot='key' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='matches.csv' datatype='table' name='[__tableau_internal_object_id__].[matches.csv_DD4ADFDDE8FF47B5BFA53E86D6B2DB68]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[matches.csv_DD4ADFDDE8FF47B5BFA53E86D6B2DB68]' derivation='Count' name='[__tableau_internal_object_id__].[pcrk:cnt:matches.csv_DD4ADFDDE8FF47B5BFA53E86D6B2DB68:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' rank-options='Competition,Ascending' type='PctRank' />
            </column-instance>
            <column-instance column='[winner]' derivation='Count' name='[cnt:winner:qk]' pivot='key' type='quantitative' />
            <column-instance column='[toss_winner]' derivation='None' name='[none:toss_winner:nk]' pivot='key' type='nominal' />
            <column-instance column='[winner]' derivation='None' name='[none:winner:nk]' pivot='key' type='nominal' />
            <column caption='Toss Winner' datatype='string' name='[toss_winner]' role='dimension' type='nominal' />
            <column caption='Winner' datatype='string' name='[winner]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1m2egue0yuylqw16ddzap0sbhrp1].[none:winner:nk]'>
            <groupfilter from='&quot;Chennai Super Kings&quot;' function='range' level='[none:winner:nk]' to='&quot;Sunrisers Hyderabad&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1m2egue0yuylqw16ddzap0sbhrp1].[none:winner:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1m2egue0yuylqw16ddzap0sbhrp1].[none:toss_winner:nk]' />
              <tooltip column='[federated.1m2egue0yuylqw16ddzap0sbhrp1].[__tableau_internal_object_id__].[pcrk:cnt:matches.csv_DD4ADFDDE8FF47B5BFA53E86D6B2DB68:qk]' />
              <text column='[federated.1m2egue0yuylqw16ddzap0sbhrp1].[__tableau_internal_object_id__].[cnt:matches.csv_DD4ADFDDE8FF47B5BFA53E86D6B2DB68:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1m2egue0yuylqw16ddzap0sbhrp1].[cnt:winner:qk]</rows>
        <cols>[federated.1m2egue0yuylqw16ddzap0sbhrp1].[none:winner:nk]</cols>
      </table>
      <simple-id uuid='{1AA218B4-1E87-4C1B-86CD-7894291D2292}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#f0eae8' />
        </style-rule>
      </style>
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='43625' id='3' name='Teams Ranking (WIN)' w='100100' x='-200' y='125' />
        <zone h='56875' id='9' name='Toss Statistics' w='40300' x='500' y='42250' />
        <zone h='57500' id='10' name='Win/Loss (%)' w='59700' x='40400' y='42250' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='900' minheight='900' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='18' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98000' id='17' param='vert' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='43625' id='3' is-fixed='true' name='Teams Ranking (WIN)' w='100100' x='-200' y='125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='56875' id='9' is-fixed='true' name='Toss Statistics' w='40300' x='500' y='42250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='57500' id='10' is-fixed='true' name='Win/Loss (%)' w='59700' x='40400' y='42250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{192CAD9B-E579-4F24-84A1-E8D04DE31955}' />
    </dashboard>
    <dashboard name='Story 1' type='storyboard'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#f28e2b' fontname='Tableau Bold'>IPL ANALYSIS</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#f0eae8' />
        </style-rule>
        <style-rule element='story-point-caption'>
          <format attr='background-color' value='#555555' />
        </style-rule>
      </style>
      <size maxheight='964' maxwidth='1016' minheight='964' minwidth='1016' />
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='2' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98340' id='1' param='vert' removable='false' w='98426' x='787' y='830'>
            <zone _.fcp.SetMembershipControl.false...type='title' _.fcp.SetMembershipControl.true...type-v2='title' h='4253' id='3' w='98426' x='787' y='830' />
            <zone _.fcp.SetMembershipControl.false...type='flipboard-nav' _.fcp.SetMembershipControl.true...type-v2='flipboard-nav' h='10477' id='4' is-fixed='true' paired-zone-id='5' removable='false' w='98426' x='787' y='5083' />
            <zone _.fcp.SetMembershipControl.false...type='flipboard' _.fcp.SetMembershipControl.true...type-v2='flipboard' h='83610' id='5' paired-zone-id='4' removable='false' w='98426' x='787' y='15560'>
              <flipboard active-id='7' nav-type='caption' show-nav-arrows='true'>
                <story-points>
                  <story-point caption='This map shows the density of the matches played in each city throughout the history of IPL' captured-sheet='Match Distribution' id='8' />
                  <story-point caption='This view shows the no. of matches played in a year throughout the history of IPL' captured-sheet='Matches/Year' id='1' />
                  <story-point caption='This view shows the no. of matches played by each team and their ranking according to their Win' captured-sheet='Teams Ranking (WIN)' id='2' />
                  <story-point caption='This view shows the avg. no. of runs made by each team during their career in the history of IPL' captured-sheet='AVG(Run Rate)/Team' id='3' />
                  <story-point caption='This view gives an overview of the top 25 Batsman in the history of IPL' captured-sheet='Batsman Stats' id='4' />
                  <story-point caption='This view gives an overview of the top 25 Bowlers in the history of IPL' captured-sheet='Bowler Stats' id='5' />
                  <story-point caption='This view shows the no. of Toss won by each team and their decision whether to Bat/Bowl ' captured-sheet='Toss Statistics' id='6' />
                  <story-point caption='This view gives an overview of the Winning percentage of a team against their enemies wrt to their past perfomance' captured-sheet='Win/Loss (%)' id='7' />
                </story-points>
              </flipboard>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <simple-id uuid='{3AB2AF0C-8733-4AF9-A1AB-F373B661DD00}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='63'>
    <window class='worksheet' name='Match Distribution'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='checkdropdown' param='[federated.1m2egue0yuylqw16ddzap0sbhrp1].[yr:date:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1m2egue0yuylqw16ddzap0sbhrp1].[none:city:nk]</field>
            <field>[federated.1m2egue0yuylqw16ddzap0sbhrp1].[none:id:ok]</field>
            <field>[federated.1m2egue0yuylqw16ddzap0sbhrp1].[none:match_id:ok]</field>
            <field>[federated.1m2egue0yuylqw16ddzap0sbhrp1].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{00BEE22B-EFCF-4739-B21A-974B2ED15E04}' />
    </window>
    <window class='worksheet' name='Matches/Year'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='checkdropdown' param='[federated.1m2egue0yuylqw16ddzap0sbhrp1].[yr:date:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.1m2egue0yuylqw16ddzap0sbhrp1].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{72E22DE6-5A58-4B1E-A4E4-E54BC0C83954}' />
    </window>
    <window class='worksheet' name='Teams Ranking (WIN)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1m2egue0yuylqw16ddzap0sbhrp1].[__tableau_internal_object_id__].[rank:cnt:matches.csv_DD4ADFDDE8FF47B5BFA53E86D6B2DB68:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='2' param='[federated.1m2egue0yuylqw16ddzap0sbhrp1].[none:winner:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.1m2egue0yuylqw16ddzap0sbhrp1].[none:city:nk]</field>
            <field>[federated.1m2egue0yuylqw16ddzap0sbhrp1].[none:winner:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{85E9F69A-C568-4B3C-80D4-9DD4BFE53012}' />
    </window>
    <window class='worksheet' name='AVG(Run Rate)/Team'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='4' param='[federated.1m2egue0yuylqw16ddzap0sbhrp1].[none:winner:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1m2egue0yuylqw16ddzap0sbhrp1].[none:winner:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BE06EFB5-AA26-4642-B093-CEC44E58E032}' />
    </window>
    <window class='worksheet' name='Batsman Stats'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='3' param='[federated.1m2egue0yuylqw16ddzap0sbhrp1].[none:batsman:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1m2egue0yuylqw16ddzap0sbhrp1].[none:batsman:nk]</field>
            <field>[federated.1m2egue0yuylqw16ddzap0sbhrp1].[none:player_of_match:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E9FFF4E2-9295-461C-B301-B1DC2BC89680}' />
    </window>
    <window class='worksheet' name='Bowler Stats'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='3' param='[federated.1m2egue0yuylqw16ddzap0sbhrp1].[none:bowler:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1m2egue0yuylqw16ddzap0sbhrp1].[none:batsman:nk]</field>
            <field>[federated.1m2egue0yuylqw16ddzap0sbhrp1].[none:bowler:nk]</field>
            <field>[federated.1m2egue0yuylqw16ddzap0sbhrp1].[none:player_of_match:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1EB216D3-7CD2-4A83-867C-1198B53C5FD3}' />
    </window>
    <window class='worksheet' name='Toss Statistics'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1m2egue0yuylqw16ddzap0sbhrp1].[none:toss_winner:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.1m2egue0yuylqw16ddzap0sbhrp1].[none:toss_winner:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2A123F82-7E29-4163-B222-A8579631C424}' />
    </window>
    <window class='worksheet' name='Win/Loss (%)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.1m2egue0yuylqw16ddzap0sbhrp1].[none:toss_winner:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.1m2egue0yuylqw16ddzap0sbhrp1].[none:id:ok]</field>
            <field>[federated.1m2egue0yuylqw16ddzap0sbhrp1].[none:team1:nk]</field>
            <field>[federated.1m2egue0yuylqw16ddzap0sbhrp1].[none:team2:nk]</field>
            <field>[federated.1m2egue0yuylqw16ddzap0sbhrp1].[none:toss_decision:nk]</field>
            <field>[federated.1m2egue0yuylqw16ddzap0sbhrp1].[none:toss_winner:nk]</field>
            <field>[federated.1m2egue0yuylqw16ddzap0sbhrp1].[none:winner:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CD4AC791-3C22-462B-A2FF-044BA61DB2E5}' />
    </window>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Teams Ranking (WIN)'>
          <zoom type='entire-view' />
          <highlight field='[federated.1m2egue0yuylqw16ddzap0sbhrp1].[none:winner:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Toss Statistics'>
          <zoom type='fit-width' />
          <highlight field='[federated.1m2egue0yuylqw16ddzap0sbhrp1].[none:toss_winner:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Win/Loss (%)'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{A12AD90E-154B-4D94-B665-84F5308DE3FC}' />
    </window>
    <window class='dashboard' maximized='true' name='Story 1'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{131E512E-2EFD-43DA-9D51-8AB456594334}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='AVG(Run Rate)/Team' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Batsman Stats' width='192'>
      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
      q/t8AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Bowler Stats' width='192'>
      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
      7vy26AAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nOy9d3Rc13no+ztl+gBTUYlOsJMgKZGiRHU5smzJRXbiF8dO4ji5Se5NYr/k
      5aU6N3GSexPHiW/yHMfLKY5jO7YUFVuWLMvqxRRJsRcQBEiA6G0G0/uc9v4YEiCIATggAYIU
      57cWFodzdvnOmfOds/f+yhaUXM6gTJmbFMEwjLIClLlpEVdagDJlVpKyAtxgGFoGdfQ4l762
      tcBJDG1FRLpqjGwYLTq+In2XFeASsj/8NMlv/TIGkH/rcyT+6aE5N9ss1Ckyr/z99H+NzDjp
      J3+e9BO/QO7gU0suX/6NP0Y5/dbc79/8E/Rc4XP2+V8n+bU7SH3nEygDx5dehrc+R/KbP036
      yV9HV+cvp/Y+g9J74LLt6cGD5E+8sFAJUv/xXnTVIPP9nyV3+DnUM4+T3fsd8gf+HnX83OJP
      4jzyFdd8FyM6LOjJDFpKRXRawdDI7/s71PF+zLd9BkGOkdv7dQRPB7JLR+1+igxg+6nfQQ91
      YghV2N73OQSHB+XUt6FyJ8QPQuVORG2Q3OEnkDf+ApItN/1ZNEXJH3sOedMvINfWkHvz70Gq
      xfre3yL78v/CUHTMO38e5cxeBI+Gekm7F2N95J/J/vDTyDv+F3JtHfn9f4s61o/5zt9HyPWS
      O/gYgmsj1vf8Ktln/wyEHIJrNUbkDNLGTyFZUuQOPoZYdxfWO3+56DUy3/GHmNfuBCVE5od/
      jpHXsNz7OVBGyO/7N8TG+9BO/we6agM+B5kulJ49yJs+ieQ2oQ6dwcimsN77GQD0sT2kn96P
      edfvoJ35Nqbb/xS186tIa34JyeNFqmpEnxoA2YMeOo2QTSPVfgRib4NkIffKn2AIYCgOrO/7
      I4RSf+srvkvexUhNO9D6nkOwtQGgB/ahTqWxvf8PyL35JfTxgxiGDdFVh6nj/0L0dmD7qd8p
      1F31AOZ1t5J97tfJHfoeRnwQI5M4/2+E7Jv/iPWRf8S0+paLPm8n99ZXMG3/efLvfAU91Ime
      ySF6GzESw2ihEUTfakTfVqS6Vqzv/5tL2k3Mey56+Aj5vm5Ma28jf/A/wVSBVH8LWv/T6Ikk
      ejyG9b7fOq/cP4vavw9teA+YvIgVVQAYsW7ST34aZbh7ut38vi+QfvKzGIiIVRsRxDTK2Z+Q
      f+OvMd//15g7Poyp41FMt/wGpqZGckdfxfahv0d55/9gpKZQul9EXn3/dHti9U6sd3+K/JHH
      Eb2rUHp+jNrfiej2Fq5r7ebCb+K+HdQgWrAPsXY9erQXI5dBC3RjvuuPMaYOL+q3LitAEaTG
      28kf+BpS0x0ACBYXRmoUbfgIWFwIvm2Y1uxGOfLv6IaEkZlEnegBQA+ewJB9mLY+ij7RCYKA
      HjyJHhoARASzjDZ8ED0WuOhzEEEGbfQYcus9CI5mTJsfQe19Ei1hYL71k+iT76COnZkRcla7
      8yPIDsiMo8eTSKs2ohz6CoJzNYLFDoYBkgVBNiNIZgSxMCAQ6+9Cbu4gf+gbGIDgWo/9Y9/A
      1Lh+ul3zHX+I/WNfRh96DW1qEtG9CgwdwVaBNnIQLTQEgoQePIWeTiMYKbSRgyDYQAB57aPI
      DZun2zPSk6hDhxGsHuT1H0U98g+ITQ8inH+USzWbUU59D7F6A4KooiULb+oZ5MI5iYsb1Eif
      //znP7+oGu9ijGwMbeQQWFdBqh/RvwEjOYLoXoOgh1H6DmDa+AhGrBf17KuIDXchynZQJ1GH
      TyGYLeiJCdSeZ9EnB5HX/RSCLKP1vwUWD4LJiVy3HuXkExgqyI1bpz9LqzajDezFkOwIoora
      /SKitwPRaUXtfh5kL1LNaoz4MJgqEETjonYdGLkogrkSIzGEHh1Cjw6DZAdNQ5BV1JFjCPZq
      xIpq1IF9iHYfWN2QnESwWNHjQQSzGSMdh3wQte8nyM33Ihj58+1d/DcMyJCPgKYV3hiyE0G2
      IjXtQO16Gj2dRPQ2ow28hqGakarqyHc+j7z+Q6DEMHIZ0LPo0SGM2DBGfBQ9OIi89j7IJtEn
      DyDW3wXZQKFMLoEWGkSqWgdqFCQXosmEER0CwYyRCYLFiREdQmq+A0G2lvSbl+0AF2EYOmjK
      Sotx06Mc/gqG2IB5+6NX1oBkQhBKG9yUFaDMTU15DlDmpuaqFUDX9aWQo0yZFeGqFaA8gipz
      I3PZNaPA+DBjoSSt9T7GxkcRBTtJJU9lpYc1rQ3XQsYyZZaNyypAdV0jkXgPDocDzTBjM0k0
      bNjCeF8vuq6j63r5LVDmhuWyCjAxMkgoFELXNEwmGbffTe+Jk/hr6xFFEcMwkCTpWsha5jpn
      YmKCw4cP88gjj6y0KCVzWQWobWimtqF51ndur3/ZBCpz41JbW4vD4VhpMRZFeRm0zJIxNDTE
      sWPHCAQCKy1KyVy1IUzTtPIQqMwNS9kduswVMZmIM5mY3wv1Utp8fpwWy+ULXmOWVQGGhoY4
      deoUra2trF+//vIVytwwvNLTzXcOHyy5/Bc++Cgd9auWUaIrY1nnAF5vwZe7ra1tObspU+aK
      WVYFOHToEFarlXQ6vZzdlClzxZRkCY6mdXxOmbGJKRqamxgaHMFfW8+qGt+Cde+7776lkrNM
      mWWhNEtwTw+RhMSWjnb2vHyU7Q/eVbAEV3mmLcFdA1OcGpwqueP7tjZR5bZflfBllp6TJ0+S
      SCTYvXv3guUW6wSpaxqqukAE/QoxSwG6jr3DSDDO5u23Ue93AQVL8PDwMG0tzZw80U3jmka6
      T5ykstIzyxJ8anCKx1/tLLnjza3V1Pkrl/Zsylw1tbW1RCIRZHnhZ6MoLm70LErSZdtcCWZJ
      ZOg6mmYgXBRTX8wSPPt/Zd5NjI6OkljE8uaNziwFyGFBT/czNj5ZfjrfpOzYsYMdO3astBjX
      jFkKYDfprN16Gxabd6XkKXMN0dJDGFqmpLKCZEOyNy2zRNeeWQqQVkS2N9dy9NQoTfVlJVgp
      nn32WVavXs2mTZuWtZ/s6H+hJXtKKis51+FY83vLKs9KMGsm43GYePGlt2hsLY/yVxKTyUQw
      GFxpMW4KZr0BWtdtob6ulpF4gqrK0vKqlFlaNE3DYrEQi8VWWpSbglkKcOTIEcYHuqldsxMa
      qlZKppsaSZJ44IEHVlqMm4ZZCmAVMtS1bcTt9swpqClZBkYCtLU2MTY8SHV9Eyap1BSkZeZj
      ONlfclmLZKXaVreM0ty4nDhxgmAwyO7du7HZbCXXm6UAU5EUkl1HnRinrXF21NfZM2ep8Ts5
      dvgk1a1N9Pb2sWFd+9JIfxPzxLlvlFy2wdHCz64unq35Zqe/vx+73U5fXx+bN2++fIXzzFKA
      5qZGDh45zj0P7ZxT0GazMBlNgZLFWVFJJhycFRS/aNO4fn2axq9nDMNY0mu2mFioS/u+3lwh
      1q9fT29vLy6Xa1H9zFKAgXN9mK12UqkkuGZPgl2VLjLBMGs6NjNy5hTVjatnuUIs2jQuXp+m
      8esZQRCW9JoJQulD2Ev7vt5cIdatW8e6desWXW9aorH+HoYDUSori1uA3f4a3P4aANZvKv0V
      cyOiqipvv/02kUiERx+9wgStZZaNbFcXua7TJZd33HsPclXxRZ1pBahvXcfGSIrtHWs5emqU
      1vqbN/ODLMts376d3t7elRalTBFyXaeJPfV0yeUtGzfMqwBzDWEv76F5dctVCfhu4OjRo2zb
      tm2lxSizzEwrgJKO8fbB47gqbfSeHVhBka4P7r333kWPc8vceEwPgSSzndZVVQyPT3H7XVtW
      UqZrT6T0tXhkK1SU1+LfLUwrgCibEK2V1HlyTE6Gaaq9iZzhjpW+Fo+7BbaX1+LfLcx6x9f6
      3UwEYviqFo71LVPm3cKshdnhwX5cvhpM4lwDSV93J1nDRJXThOLwEQ8Gy5bgMjc8sxRANFlZ
      09SKq2KuL0U6p7FufRMH9hxlyz2t7ypL8GLMM4ZhoK2Q3GVL8JX2rc/b92x36JZmQrEElZ65
      a6Zr21s42zvC9jt3MXwTW4KX2hq7kn3fqJbgxfctztv39LcTExOIZjsdHauLFrQ4XGzaVMgU
      8W63BJe5eZhWJSGf5KWXX+Gtt95iLBhdSZnKlLlmTCtATVM761vqiMdjRGPJlZSpTJlrxqzB
      lMVqw2yWsdrK4ZBlbg5mzQy23XbnSslRpsyKMK0ASjrGf33vOVa3NiLaa9m1ffG+1WXK3GjM
      8gXasmk9umhmdfu7LwFSmTLFmJ4DiLKJWCSMJICiaEULH9y7l2w2zvHjJxmdDF0zIcuUWS5m
      zQGcdgsDAwNU+OvxuZ2zCgbGBpAtTiZHA7R3bJmTHr1sCV5+ypbgK+27REuwLMugZQkEY3Mi
      wgTRRDwSwO1tKZoefTkswd3d3VRXV09vtXQ9ULYEF3jXWYKnEcxUVMxdBq2qXcW9tYVNzloX
      1f2VkUqlCIfDnDt3jocffvga9FjmZmSWKmXSGURZAv2qtg5eEux2O/l8nlCoPNcos3xct4Yw
      QRCQJIk77yzbJsosH9NDoLPd3WzeeSeSlqa7PwisfFaIu+++e6VFKPMuZ1oBbCaN5559DsnI
      sWnHtU/O+uOecMllvTYTtzVVLKM0ZW4WphWgYfUmGlYv74YMCzGZUFas7zI3L+W8H2VuakpW
      gERkitNdXSQzGbpPdRKOl7a3VJky1zMlWyYcLi/+bJy+zh5atm0lONiH29m2IpbgpbaILqUl
      +PTp0wwODuL3+xkbG2Pnzp3U1S1NHqF3qyXYMAzeeOMN7r//fo4cOcLq1atxuVzzt7VcluCF
      mJoYQTN5aFklkkzEUTRWLCb4chbRkZEREokElZWVdHV1cfvtt1NRsTST5sv1vWXLFkKhEJqm
      8cgjj3DixAkaGxuvSd9X0t6V9r2UluBcLoeu68iyjNVqJZFI4PPNn5pnKS3BJbdktliIhwOI
      7jpIRWlvLx47fD1QWVnJ5OQktbW11NXVMTU1dc36PnHiBAMDA7hcLl566aUrStl9s2GxWLBY
      LADzZidfLkp+nLh9Nbh9hfToFfbrexfJCxexu7sbu91Oa+u1cN4o0NHRQUdHB8CidipZCjRN
      IxwOU1VVxeDgIE1NTYt6yq8U8XgcgJ6eHgKBABaLhZaWlmvS942Xl6QETpw4AYDZbGZoaAiv
      14vb7V6WvromOjk92Vly+XtWP0CVs3pZZOnt7WVoaIhdu3bx9NNP89nPfvaGSD1TWVnJfffd
      B3DN35jX/9W5Ai48gQHWrFmzrH2dnuzk6eOPl1x+Q83mZVOAdevWMT4+zr59+5BlmbGxMZqa
      rs/gpr9+9YWSyza5vXzy1l3LIse7QgFy+75Kfv9XSy5v+5lvIDfO3QftRufEiRNEo1Eefvhh
      1q9fT0NDw0qLdH3y7/86/XHRCqBl43T2DOKvrWdVTTmJ7vXExfOP5ubre552vbBoBQhcFBFG
      WQFWlJGeHzB65gcll99wx+9T6V+/jBLdeCxaAdzeCrrOR4SVWVkyyTHC44dKLq/kE8sozY3J
      ohXA5qnhVk/NcshSpsw1RzAWYw+/BF3X0TQNURQJRFIEoqmS67bWeXBYTRiGgSAITCTyJdc1
      SyJeuzxdV4+PYcRHS64vVq1HsFRM1yc6UHJdZCs4a6frBpMBplKBkqs3e1qxmx3T9YdTpfdt
      Ea1U22b6ziTGyCTHSq5f4VuHyTxz3lpmGLR0aZUlO5KtcbruZCJBIBEvue82vx+H2TJdfyhS
      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
      K/z/AQ8b8sx/e+lQAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Match Distribution' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Matches/Year' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Story 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Teams Ranking (WIN)' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Toss Statistics' width='192'>
      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
      xEGY4JHm/4PBeK9cRklfAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Win/Loss (%)' width='192'>
      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
      QmCC
    </thumbnail>
  </thumbnails>
</workbook>
